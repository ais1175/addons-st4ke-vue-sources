{"version":3,"sources":["webpack:///./resources/js/components/Games/GameMessage.vue?2aa0","webpack:///./resources/js/components/Games/PlayControls.vue?e263","webpack:///./resources/js/components/BlockPreloader.vue?0e96","webpack:///./resources/js/components/BlockPreloader.vue?9c7f","webpack:///./resources/js/components/Games/GameMessage.vue?a3e6","webpack:///./resources/js/components/Games/GameMessage.vue?60fd","webpack:///./node_modules/poly-decomp/src/index.js","webpack:///./node_modules/color-string/index.js","webpack:///./resources/js/components/BlockPreloader.vue?ab0f","webpack:///./packages/plinko/resources/js/pages/game.vue?6073","webpack:///./packages/plinko/resources/audio/lose.wav","webpack:///./packages/plinko/resources/audio/win.wav","webpack:///./resources/js/components/Games/PlayControls.vue?e1e4","webpack:///./resources/js/components/BlockPreloader.vue?2f06","webpack:///./node_modules/color-name/index.js","webpack:///./resources/js/components/Games/GameMessage.vue?933b","webpack:///resources/js/components/Games/GameMessage.vue","webpack:///./packages/plinko/resources/js/pages/game.vue?6522","webpack:///./packages/plinko/resources/audio/bang.wav","webpack:///./packages/plinko/resources/audio/punch.wav","webpack:///./resources/audio/common/click.wav","webpack:///./resources/js/components/Games/PlayControls.vue?7d4c","webpack:///./resources/js/components/Games/GameMessage.vue?8c8f","webpack:///./node_modules/color/index.js","webpack:///./packages/plinko/resources/js/pages/game.vue?90bc","webpack:///resources/js/components/Games/PlayControls.vue","webpack:///./resources/js/components/Games/PlayControls.vue?4b43","webpack:///./packages/plinko/resources/js/pages/game.vue?c1e6","webpack:///./packages/plinko/resources/js/pages/helpers/plinko.js","webpack:///packages/plinko/resources/js/pages/game.vue","webpack:///./packages/plinko/resources/js/pages/game.vue?8f4b","webpack:///./packages/plinko/resources/js/pages/game.vue","webpack:///resources/js/mixins/Game.vue","webpack:///./resources/js/plugins/route.js","webpack:///./resources/js/mixins/Game.vue?b66b","webpack:///./resources/js/components/Games/PlayControls.vue?cbe2","webpack:///./node_modules/matter-js/build/matter.js"],"names":["content","module","i","options","transform","undefined","locals","exports","push","render","_h","this","$createElement","_c","_self","attrs","_v","_s","message","_e","staticRenderFns","lineInt","l1","l2","precision","a1","b1","c1","a2","b2","c2","det","scalar_eq","lineSegmentsIntersect","p1","p2","q1","q2","dx","dy","da","db","s","t","triangleArea","a","b","c","isLeft","isLeftOn","isRight","isRightOn","decomp","polygon","edges","polygonGetCutEdges","min","tmp1","tmp2","tmpPoly","nDiags","Number","MAX_VALUE","length","polygonIsReflex","j","polygonCanSee","polygonCopy","k","polygonAt","polygonSlice","cutEdges","Array","polys","cutEdge","poly","result","splice","indexOf","quickDecomp","polygonQuickDecomp","reflexVertices","steinerPoints","delta","maxlevel","level","upperInt","lowerInt","p","upperDist","lowerDist","d","closestDist","upperIndex","lowerIndex","closestIndex","lowerPoly","upperPoly","v","console","warn","getIntersectionPoint","sqdist","polygonAppend","polygonCanSee2","isSimple","path","removeCollinearPoints","num","collinear","removeDuplicatePoints","pi","points_eq","makeCCW","br","tmp","N","pop","polygonReverse","tmpPoint1","tmpPoint2","thresholdAngle","ab","bc","dot","magA","Math","sqrt","magB","acos","from","to","tmpLine1","tmpLine2","dist","targetPoly","polygonClear","abs","colorNames","swizzle","reverseNames","name","hasOwnProperty","cs","get","clamp","max","hexDouble","str","toString","toUpperCase","string","val","model","substring","toLowerCase","hsl","hwb","rgb","value","match","hexAlpha","i2","parseInt","slice","parseFloat","round","alpha","isNaN","hex","rgba","arguments","percent","r","g","hsla","hwba","keyword","staticClass","$t","props","required","validator","_vm","ref","on","$event","preventDefault","play","callback","$$v","formIsValid","expression","_t","betLabel","playing","validationInteger","validationMin","minBet","validationMax","floor","account","balance","maxBet","decreaseBet","increaseBet","scopedSlots","_u","key","fn","bet","proxy","_n","loading","disabled","isPlayDisabled","colorString","convert","_slice","skippedModels","hashedModelKeys","Object","keys","forEach","call","labels","sort","join","limiters","Color","obj","Error","channels","color","valpha","newArr","zeroArray","hashedKeys","JSON","stringify","limit","freeze","getset","channel","modifier","isArray","m","maxfn","assertArray","arr","prototype","toJSON","places","self","args","concat","percentString","array","object","unitArray","unitObject","map","toFixed","roundTo","roundToPlace","red","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","l","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","contrastRatio","isDark","isLight","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w","w1","w2","newAlpha","raw","mixins","Form","type","String","default","Boolean","data","computed","defaultBet","config","default_bet_amount","min_bet","max_bet","betStep","bet_change_amount","provablyFairGame","hash","watch","$emit","created","$nextTick","methods","sound","Bodies","Matter","Body","Composite","Engine","Events","World","Render","svg","width","height","Promise","resolve","canvas","document","createElement","ctx","getContext","img","Image","onload","drawImage","toDataURL","src","encodeURIComponent","dom","paytable","countX","countY","offsetX","h","offsetY","engine","create","run","timing","timeScale","world","gravity","element","showAngleIndicator","wireframes","collisionStart","collisionActive","collisionEnd","draw","xStart","cnt","ballSvg","ballColor","light","svgToPng","ballRadius","ballTexture","pegSvg","pegSize","pegTexture","pegLightSvg","pegColor","pegLightTexture","peg","addCircle","isStatic","density","restitution","collisionFilter","category","label","activePeg","zIndex","sprite","texture","mask","group","visible","opacity","pegs","pay","svgA","payTexture","payATexture","body","rectangle","addBody","bodyActive","buckets","bodies","add","remove","circle","bucket","bucketTarget","torque","allBodies","frame","split","n","angle","position","velocity","setVelocity","random","size","fillStyle","PI","cos","sin","removeBody","bang","scale","pairs","bodyA","bodyB","substr","punch","bodyPeg","last_y","applyForce","vx","components","clickSound","plinko","ready","mounted","component","class","$vuetify","theme","dark","gamePackageId","$route","params","game","gameSlug","slug","$store","getters","getRoute","store","factory","__WEBPACK_EXTERNAL_MODULE__27__","modules","installedModules","__webpack_require__","moduleId","getter","o","defineProperty","enumerable","Symbol","toStringTag","mode","__esModule","ns","bind","property","Common","_nextId","_seed","_nowStartTime","Date","extend","deep","argsStart","deepClone","source","prop","constructor","clone","values","begin","end","set","parts","shuffle","temp","choose","choices","isElement","HTMLElement","nodeType","nodeName","isFunction","isPlainObject","isString","sign","now","window","performance","webkitNow","_seededRandom","colorToNumber","replace","charAt","logLevel","log","apply","info","nextId","haystack","needle","list","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","chainPathBefore","base","chainPathAfter","Bounds","vertices","bounds","update","Infinity","vertex","contains","point","overlaps","boundsA","boundsB","translate","vector","shift","deltaX","deltaY","Vector","magnitude","magnitudeSquared","output","rotateAbout","normalise","vectorA","vectorB","cross","cross3","vectorC","sub","mult","scalar","div","perp","neg","atan2","_temp","Vertices","points","index","isInternal","fromPath","centre","area","mean","average","signed","inertia","mass","numerator","denominator","vertice","nextVertice","scaleX","scaleY","chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","theta","clockwiseSort","vertexA","vertexB","isConvex","flag","hull","upper","lower","eventNames","names","events","off","callbacks","newCallbacks","trigger","event","eventClone","id","parent","isModified","constraints","composites","plugin","setModified","composite","updateParents","updateChildren","childComposite","objects","addConstraint","addComposite","constraint","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allConstraints","allComposites","move","rebase","translation","recursive","rotation","setPosition","Sleeping","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","force","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","friction","frictionStatic","frictionAir","slop","strokeStyle","lineWidth","xScale","yScale","xOffset","yOffset","circleRadius","positionPrev","anglePrev","axes","_original","_initProperties","nextGroup","isNonColliding","nextCategory","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","settings","setStatic","setMass","setDensity","setInertia","setVertices","setAngle","setAngularVelocity","setParts","setCentre","part","inverseMass","inverseInertia","moment","fromVertices","autoHull","hullCentre","total","_totalProperties","relative","totalArea","totalInertia","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","offset","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","afterCollisions","pair","isActive","collision","sleepingBody","movingBody","wasSleeping","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","impulse","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","share","normal","normalVelocity","relativeVelocity","difference","massTotal","resistanceTotal","zero","postSolveAll","Pair","Contact","timestamp","parentA","parentB","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","supports","collided","support","contactId","contact","depth","setActive","Grid","Mouse","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","controller","mouse","frameRequestId","pixelRatio","background","wireframeBackground","hasBounds","enabled","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","textures","setPixelRatio","appendChild","parentNode","loop","time","stop","_getPixelRatio","setAttribute","style","lookAt","padding","center","viewHeight","outerRatio","innerRatio","setScale","setOffset","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","endViewTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","collisions","vertexNumbers","mousePosition","broadphase","grid","debug","metrics","debugTimestamp","text","fps","extended","broadEff","midEff","narrowEff","debugString","font","fillText","start","beginPath","arc","closePath","moveTo","coils","ceil","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","distance","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","_getTexture","rect","axis","normalPosX","normalPosY","penetration","bucketKeys","bucketId","region","bucketWidth","bucketHeight","inspector","selected","item","setLineDash","selectStart","selectBounds","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","cssBackground","test","backgroundSize","Detector","detector","pairsList","forceUpdate","col","row","gridChanged","broadphaseTests","newRegion","_getRegion","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairId","pairKeys","SAT","broadphasePairs","pairsTable","table","canCollide","midphaseTests","partA","partB","previousCollision","collides","narrowphaseTests","reused","narrowReuseCount","narrowDetections","filterA","filterB","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","overlap","tangent","verticesB","_findSupports","verticesA","projectionA","projectionB","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","_getRelativeMousePosition","changedTouches","detail","setElement","addEventListener","clearSourceEvents","elementBounds","getBoundingClientRect","rootNode","documentElement","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","touches","pageX","left","pageY","top","clientWidth","clientHeight","gradient","xx","trapezoid","slope","verticesPath","x1","x2","x3","maxSides","sides","yy","vertexSets","flagInternal","removeCollinear","minimumArea","concave","decomposed","chunkVertices","pav","pbv","Plugin","_registry","register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","dependency","dependencyParse","range","install","isUsed","used","isFor","parsed","for","versionSatisfies","use","plugins","uses","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","exec","major","minor","patch","isRange","operator","prerelease","normalImpulse","tangentImpulse","Pairs","_pairMaxIdleLife","removeOld","pairIndex","indexesToRemove","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","bodyBtoA","contactShare","tempA","tempB","tempC","tempD","postSolvePosition","preSolveVelocity","contactVertex","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","velocityPointB","tangentVelocity","tangentSpeed","tangentVelocityDirection","normalForce","maxFriction","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","Metrics","positionIterations","velocityIterations","constraintIterations","renderDefaults","reset","_bodiesApplyGravity","_bodiesUpdate","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","narrowReuse","Query","MouseConstraint","Runner","Composites","Svg","RenderPixi","before","after","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","mouseConstraint","_triggerEvents","mouseEvents","_frameTimeout","clearTimeout","runner","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","isFixed","deltaMin","deltaMax","tick","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage"],"mappings":"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","file":"js/packages/plinko-resources-js-pages-game.js","sourcesContent":["export * from \"-!../../../../node_modules/style-loader/index.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameMessage.vue?vue&type=style&index=0&id=301c9fc3&lang=scss&scoped=true&\"","export * from \"-!../../../../node_modules/style-loader/index.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayControls.vue?vue&type=style&index=0&id=1ba40898&lang=scss&scoped=true&\"","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlockPreloader.vue?vue&type=style&index=0&id=0ccd884f&lang=scss&scoped=true&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlockPreloader.vue?vue&type=style&index=0&id=0ccd884f&lang=scss&scoped=true&\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlockPreloader.vue?vue&type=style&index=0&id=0ccd884f&lang=scss&scoped=true&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".loader[data-v-0ccd884f] {\\n  width: 150px;\\n}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".scale-enter[data-v-301c9fc3], .scale-leave-to[data-v-301c9fc3] {\\n  transform: scale(0);\\n  opacity: 1;\\n}\\n.scale-enter-active[data-v-301c9fc3], .scale-leave-active[data-v-301c9fc3] {\\n  transition: all 0.3s;\\n}\", \"\"]);\n\n// exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":\"scale\"}},[(_vm.message)?_c('v-alert',{attrs:{\"dense\":\"\",\"outlined\":\"\",\"text\":\"\",\"color\":\"primary\"}},[_vm._v(\"\\n    \"+_vm._s(_vm.message)+\"\\n  \")]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","module.exports = {\n    decomp: polygonDecomp,\n    quickDecomp: polygonQuickDecomp,\n    isSimple: polygonIsSimple,\n    removeCollinearPoints: polygonRemoveCollinearPoints,\n    removeDuplicatePoints: polygonRemoveDuplicatePoints,\n    makeCCW: polygonMakeCCW\n};\n\n/**\n * Compute the intersection between two lines.\n * @static\n * @method lineInt\n * @param  {Array}  l1          Line vector 1\n * @param  {Array}  l2          Line vector 2\n * @param  {Number} precision   Precision to use when checking if the lines are parallel\n * @return {Array}              The intersection point.\n */\nfunction lineInt(l1,l2,precision){\n    precision = precision || 0;\n    var i = [0,0]; // point\n    var a1, b1, c1, a2, b2, c2, det; // scalars\n    a1 = l1[1][1] - l1[0][1];\n    b1 = l1[0][0] - l1[1][0];\n    c1 = a1 * l1[0][0] + b1 * l1[0][1];\n    a2 = l2[1][1] - l2[0][1];\n    b2 = l2[0][0] - l2[1][0];\n    c2 = a2 * l2[0][0] + b2 * l2[0][1];\n    det = a1 * b2 - a2*b1;\n    if (!scalar_eq(det, 0, precision)) { // lines are not parallel\n        i[0] = (b2 * c1 - b1 * c2) / det;\n        i[1] = (a1 * c2 - a2 * c1) / det;\n    }\n    return i;\n}\n\n/**\n * Checks if two line segments intersects.\n * @method segmentsIntersect\n * @param {Array} p1 The start vertex of the first line segment.\n * @param {Array} p2 The end vertex of the first line segment.\n * @param {Array} q1 The start vertex of the second line segment.\n * @param {Array} q2 The end vertex of the second line segment.\n * @return {Boolean} True if the two line segments intersect\n */\nfunction lineSegmentsIntersect(p1, p2, q1, q2){\n\tvar dx = p2[0] - p1[0];\n\tvar dy = p2[1] - p1[1];\n\tvar da = q2[0] - q1[0];\n\tvar db = q2[1] - q1[1];\n\n\t// segments are parallel\n\tif((da*dy - db*dx) === 0){\n\t\treturn false;\n\t}\n\n\tvar s = (dx * (q1[1] - p1[1]) + dy * (p1[0] - q1[0])) / (da * dy - db * dx);\n\tvar t = (da * (p1[1] - q1[1]) + db * (q1[0] - p1[0])) / (db * dx - da * dy);\n\n\treturn (s>=0 && s<=1 && t>=0 && t<=1);\n}\n\n/**\n * Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.\n * @static\n * @method area\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @return {Number}\n */\nfunction triangleArea(a,b,c){\n    return (((b[0] - a[0])*(c[1] - a[1]))-((c[0] - a[0])*(b[1] - a[1])));\n}\n\nfunction isLeft(a,b,c){\n    return triangleArea(a,b,c) > 0;\n}\n\nfunction isLeftOn(a,b,c) {\n    return triangleArea(a, b, c) >= 0;\n}\n\nfunction isRight(a,b,c) {\n    return triangleArea(a, b, c) < 0;\n}\n\nfunction isRightOn(a,b,c) {\n    return triangleArea(a, b, c) <= 0;\n}\n\nvar tmpPoint1 = [],\n    tmpPoint2 = [];\n\n/**\n * Check if three points are collinear\n * @method collinear\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @param  {Number} [thresholdAngle=0] Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.\n * @return {Boolean}\n */\nfunction collinear(a,b,c,thresholdAngle) {\n    if(!thresholdAngle){\n        return triangleArea(a, b, c) === 0;\n    } else {\n        var ab = tmpPoint1,\n            bc = tmpPoint2;\n\n        ab[0] = b[0]-a[0];\n        ab[1] = b[1]-a[1];\n        bc[0] = c[0]-b[0];\n        bc[1] = c[1]-b[1];\n\n        var dot = ab[0]*bc[0] + ab[1]*bc[1],\n            magA = Math.sqrt(ab[0]*ab[0] + ab[1]*ab[1]),\n            magB = Math.sqrt(bc[0]*bc[0] + bc[1]*bc[1]),\n            angle = Math.acos(dot/(magA*magB));\n        return angle < thresholdAngle;\n    }\n}\n\nfunction sqdist(a,b){\n    var dx = b[0] - a[0];\n    var dy = b[1] - a[1];\n    return dx * dx + dy * dy;\n}\n\n/**\n * Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.\n * @method at\n * @param  {Number} i\n * @return {Array}\n */\nfunction polygonAt(polygon, i){\n    var s = polygon.length;\n    return polygon[i < 0 ? i % s + s : i % s];\n}\n\n/**\n * Clear the polygon data\n * @method clear\n * @return {Array}\n */\nfunction polygonClear(polygon){\n    polygon.length = 0;\n}\n\n/**\n * Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.\n * @method append\n * @param {Polygon} poly The polygon to get points from.\n * @param {Number}  from The vertex index in \"poly\".\n * @param {Number}  to The end vertex index in \"poly\". Note that this vertex is NOT included when appending.\n * @return {Array}\n */\nfunction polygonAppend(polygon, poly, from, to){\n    for(var i=from; i<to; i++){\n        polygon.push(poly[i]);\n    }\n}\n\n/**\n * Make sure that the polygon vertices are ordered counter-clockwise.\n * @method makeCCW\n */\nfunction polygonMakeCCW(polygon){\n    var br = 0,\n        v = polygon;\n\n    // find bottom right point\n    for (var i = 1; i < polygon.length; ++i) {\n        if (v[i][1] < v[br][1] || (v[i][1] === v[br][1] && v[i][0] > v[br][0])) {\n            br = i;\n        }\n    }\n\n    // reverse poly if clockwise\n    if (!isLeft(polygonAt(polygon, br - 1), polygonAt(polygon, br), polygonAt(polygon, br + 1))) {\n        polygonReverse(polygon);\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Reverse the vertices in the polygon\n * @method reverse\n */\nfunction polygonReverse(polygon){\n    var tmp = [];\n    var N = polygon.length;\n    for(var i=0; i!==N; i++){\n        tmp.push(polygon.pop());\n    }\n    for(var i=0; i!==N; i++){\n\t\tpolygon[i] = tmp[i];\n    }\n}\n\n/**\n * Check if a point in the polygon is a reflex point\n * @method isReflex\n * @param  {Number}  i\n * @return {Boolean}\n */\nfunction polygonIsReflex(polygon, i){\n    return isRight(polygonAt(polygon, i - 1), polygonAt(polygon, i), polygonAt(polygon, i + 1));\n}\n\nvar tmpLine1=[],\n    tmpLine2=[];\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee(polygon, a,b) {\n    var p, dist, l1=tmpLine1, l2=tmpLine2;\n\n    if (isLeftOn(polygonAt(polygon, a + 1), polygonAt(polygon, a), polygonAt(polygon, b)) && isRightOn(polygonAt(polygon, a - 1), polygonAt(polygon, a), polygonAt(polygon, b))) {\n        return false;\n    }\n    dist = sqdist(polygonAt(polygon, a), polygonAt(polygon, b));\n    for (var i = 0; i !== polygon.length; ++i) { // for each edge\n        if ((i + 1) % polygon.length === a || i === a){ // ignore incident edges\n            continue;\n        }\n        if (isLeftOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i + 1)) && isRightOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i))) { // if diag intersects an edge\n            l1[0] = polygonAt(polygon, a);\n            l1[1] = polygonAt(polygon, b);\n            l2[0] = polygonAt(polygon, i);\n            l2[1] = polygonAt(polygon, i + 1);\n            p = lineInt(l1,l2);\n            if (sqdist(polygonAt(polygon, a), p) < dist) { // if edge is blocking visibility to b\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee2\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee2(polygon, a,b) {\n    // for each edge\n    for (var i = 0; i !== polygon.length; ++i) {\n        // ignore incident edges\n        if (i === a || i === b || (i + 1) % polygon.length === a || (i + 1) % polygon.length === b){\n            continue;\n        }\n        if( lineSegmentsIntersect(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i), polygonAt(polygon, i+1)) ){\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Copy the polygon from vertex i to vertex j.\n * @method copy\n * @param  {Number} i\n * @param  {Number} j\n * @param  {Polygon} [targetPoly]   Optional target polygon to save in.\n * @return {Polygon}                The resulting copy.\n */\nfunction polygonCopy(polygon, i,j,targetPoly){\n    var p = targetPoly || [];\n    polygonClear(p);\n    if (i < j) {\n        // Insert all vertices from i to j\n        for(var k=i; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n    } else {\n\n        // Insert vertices 0 to j\n        for(var k=0; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n        // Insert vertices i to end\n        for(var k=i; k<polygon.length; k++){\n            p.push(polygon[k]);\n        }\n    }\n\n    return p;\n}\n\n/**\n * Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\n * Note that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.\n * @method getCutEdges\n * @return {Array}\n */\nfunction polygonGetCutEdges(polygon) {\n    var min=[], tmp1=[], tmp2=[], tmpPoly = [];\n    var nDiags = Number.MAX_VALUE;\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(polygon, i)) {\n            for (var j = 0; j < polygon.length; ++j) {\n                if (polygonCanSee(polygon, i, j)) {\n                    tmp1 = polygonGetCutEdges(polygonCopy(polygon, i, j, tmpPoly));\n                    tmp2 = polygonGetCutEdges(polygonCopy(polygon, j, i, tmpPoly));\n\n                    for(var k=0; k<tmp2.length; k++){\n                        tmp1.push(tmp2[k]);\n                    }\n\n                    if (tmp1.length < nDiags) {\n                        min = tmp1;\n                        nDiags = tmp1.length;\n                        min.push([polygonAt(polygon, i), polygonAt(polygon, j)]);\n                    }\n                }\n            }\n        }\n    }\n\n    return min;\n}\n\n/**\n * Decomposes the polygon into one or more convex sub-Polygons.\n * @method decomp\n * @return {Array} An array or Polygon objects.\n */\nfunction polygonDecomp(polygon){\n    var edges = polygonGetCutEdges(polygon);\n    if(edges.length > 0){\n        return polygonSlice(polygon, edges);\n    } else {\n        return [polygon];\n    }\n}\n\n/**\n * Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.\n * @method slice\n * @param {Array} cutEdges A list of edges, as returned by .getCutEdges()\n * @return {Array}\n */\nfunction polygonSlice(polygon, cutEdges){\n    if(cutEdges.length === 0){\n\t\treturn [polygon];\n    }\n    if(cutEdges instanceof Array && cutEdges.length && cutEdges[0] instanceof Array && cutEdges[0].length===2 && cutEdges[0][0] instanceof Array){\n\n        var polys = [polygon];\n\n        for(var i=0; i<cutEdges.length; i++){\n            var cutEdge = cutEdges[i];\n            // Cut all polys\n            for(var j=0; j<polys.length; j++){\n                var poly = polys[j];\n                var result = polygonSlice(poly, cutEdge);\n                if(result){\n                    // Found poly! Cut and quit\n                    polys.splice(j,1);\n                    polys.push(result[0],result[1]);\n                    break;\n                }\n            }\n        }\n\n        return polys;\n    } else {\n\n        // Was given one edge\n        var cutEdge = cutEdges;\n        var i = polygon.indexOf(cutEdge[0]);\n        var j = polygon.indexOf(cutEdge[1]);\n\n        if(i !== -1 && j !== -1){\n            return [polygonCopy(polygon, i,j),\n                    polygonCopy(polygon, j,i)];\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Checks that the line segments of this polygon do not intersect each other.\n * @method isSimple\n * @param  {Array} path An array of vertices e.g. [[0,0],[0,1],...]\n * @return {Boolean}\n * @todo Should it check all segments with all others?\n */\nfunction polygonIsSimple(polygon){\n    var path = polygon, i;\n    // Check\n    for(i=0; i<path.length-1; i++){\n        for(var j=0; j<i-1; j++){\n            if(lineSegmentsIntersect(path[i], path[i+1], path[j], path[j+1] )){\n                return false;\n            }\n        }\n    }\n\n    // Check the segment between the last and the first point to all others\n    for(i=1; i<path.length-2; i++){\n        if(lineSegmentsIntersect(path[0], path[path.length-1], path[i], path[i+1] )){\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getIntersectionPoint(p1, p2, q1, q2, delta){\n\tdelta = delta || 0;\n\tvar a1 = p2[1] - p1[1];\n\tvar b1 = p1[0] - p2[0];\n\tvar c1 = (a1 * p1[0]) + (b1 * p1[1]);\n\tvar a2 = q2[1] - q1[1];\n\tvar b2 = q1[0] - q2[0];\n\tvar c2 = (a2 * q1[0]) + (b2 * q1[1]);\n\tvar det = (a1 * b2) - (a2 * b1);\n\n\tif(!scalar_eq(det,0,delta)){\n\t\treturn [((b2 * c1) - (b1 * c2)) / det, ((a1 * c2) - (a2 * c1)) / det];\n\t} else {\n\t\treturn [0,0];\n    }\n}\n\n/**\n * Quickly decompose the Polygon into convex sub-polygons.\n * @method quickDecomp\n * @param  {Array} result\n * @param  {Array} [reflexVertices]\n * @param  {Array} [steinerPoints]\n * @param  {Number} [delta]\n * @param  {Number} [maxlevel]\n * @param  {Number} [level]\n * @return {Array}\n */\nfunction polygonQuickDecomp(polygon, result,reflexVertices,steinerPoints,delta,maxlevel,level){\n    maxlevel = maxlevel || 100;\n    level = level || 0;\n    delta = delta || 25;\n    result = typeof(result)!==\"undefined\" ? result : [];\n    reflexVertices = reflexVertices || [];\n    steinerPoints = steinerPoints || [];\n\n    var upperInt=[0,0], lowerInt=[0,0], p=[0,0]; // Points\n    var upperDist=0, lowerDist=0, d=0, closestDist=0; // scalars\n    var upperIndex=0, lowerIndex=0, closestIndex=0; // Integers\n    var lowerPoly=[], upperPoly=[]; // polygons\n    var poly = polygon,\n        v = polygon;\n\n    if(v.length < 3){\n\t\treturn result;\n    }\n\n    level++;\n    if(level > maxlevel){\n        console.warn(\"quickDecomp: max level (\"+maxlevel+\") reached.\");\n        return result;\n    }\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(poly, i)) {\n            reflexVertices.push(poly[i]);\n            upperDist = lowerDist = Number.MAX_VALUE;\n\n\n            for (var j = 0; j < polygon.length; ++j) {\n                if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j - 1))) { // if line intersects with an edge\n                    p = getIntersectionPoint(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j - 1)); // find the point of intersection\n                    if (isRight(polygonAt(poly, i + 1), polygonAt(poly, i), p)) { // make sure it's inside the poly\n                        d = sqdist(poly[i], p);\n                        if (d < lowerDist) { // keep only the closest intersection\n                            lowerDist = d;\n                            lowerInt = p;\n                            lowerIndex = j;\n                        }\n                    }\n                }\n                if (isLeft(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j + 1)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                    p = getIntersectionPoint(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j + 1));\n                    if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), p)) {\n                        d = sqdist(poly[i], p);\n                        if (d < upperDist) {\n                            upperDist = d;\n                            upperInt = p;\n                            upperIndex = j;\n                        }\n                    }\n                }\n            }\n\n            // if there are no vertices to connect to, choose a point in the middle\n            if (lowerIndex === (upperIndex + 1) % polygon.length) {\n                //console.log(\"Case 1: Vertex(\"+i+\"), lowerIndex(\"+lowerIndex+\"), upperIndex(\"+upperIndex+\"), poly.size(\"+polygon.length+\")\");\n                p[0] = (lowerInt[0] + upperInt[0]) / 2;\n                p[1] = (lowerInt[1] + upperInt[1]) / 2;\n                steinerPoints.push(p);\n\n                if (i < upperIndex) {\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly, i, upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    if (lowerIndex !== 0){\n                        //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.end());\n                        polygonAppend(upperPoly, poly,lowerIndex,poly.length);\n                    }\n                    //upperPoly.insert(upperPoly.end(), poly.begin(), poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.end());\n                        polygonAppend(lowerPoly, poly,i,poly.length);\n                    }\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin(), poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly,0,upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,lowerIndex,i+1);\n                }\n            } else {\n                // connect to the closest point within the triangle\n                //console.log(\"Case 2: Vertex(\"+i+\"), closestIndex(\"+closestIndex+\"), poly.size(\"+polygon.length+\")\\n\");\n\n                if (lowerIndex > upperIndex) {\n                    upperIndex += polygon.length;\n                }\n                closestDist = Number.MAX_VALUE;\n\n                if(upperIndex < lowerIndex){\n                    return result;\n                }\n\n                for (var j = lowerIndex; j <= upperIndex; ++j) {\n                    if (\n                        isLeftOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) &&\n                        isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))\n                    ) {\n                        d = sqdist(polygonAt(poly, i), polygonAt(poly, j));\n                        if (d < closestDist && polygonCanSee2(poly, i, j)) {\n                            closestDist = d;\n                            closestIndex = j % polygon.length;\n                        }\n                    }\n                }\n\n                if (i < closestIndex) {\n                    polygonAppend(lowerPoly, poly,i,closestIndex+1);\n                    if (closestIndex !== 0){\n                        polygonAppend(upperPoly, poly,closestIndex,v.length);\n                    }\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        polygonAppend(lowerPoly, poly,i,v.length);\n                    }\n                    polygonAppend(lowerPoly, poly,0,closestIndex+1);\n                    polygonAppend(upperPoly, poly,closestIndex,i+1);\n                }\n            }\n\n            // solve smallest poly first\n            if (lowerPoly.length < upperPoly.length) {\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            } else {\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            }\n\n            return result;\n        }\n    }\n    result.push(polygon);\n\n    return result;\n}\n\n/**\n * Remove collinear points in the polygon.\n * @method removeCollinearPoints\n * @param  {Number} [precision] The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.\n * @return {Number}           The number of points removed\n */\nfunction polygonRemoveCollinearPoints(polygon, precision){\n    var num = 0;\n    for(var i=polygon.length-1; polygon.length>3 && i>=0; --i){\n        if(collinear(polygonAt(polygon, i-1),polygonAt(polygon, i),polygonAt(polygon, i+1),precision)){\n            // Remove the middle point\n            polygon.splice(i%polygon.length,1);\n            num++;\n        }\n    }\n    return num;\n}\n\n/**\n * Remove duplicate points in the polygon.\n * @method removeDuplicatePoints\n * @param  {Number} [precision] The threshold to use when determining whether two points are the same. Use zero for best precision.\n */\nfunction polygonRemoveDuplicatePoints(polygon, precision){\n    for(var i=polygon.length-1; i>=1; --i){\n        var pi = polygon[i];\n        for(var j=i-1; j>=0; --j){\n            if(points_eq(pi, polygon[j], precision)){\n                polygon.splice(i,1);\n                continue;\n            }\n        }\n    }\n}\n\n/**\n * Check if two scalars are equal\n * @static\n * @method eq\n * @param  {Number} a\n * @param  {Number} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction scalar_eq(a,b,precision){\n    precision = precision || 0;\n    return Math.abs(a-b) <= precision;\n}\n\n/**\n * Check if two points are equal\n * @static\n * @method points_eq\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction points_eq(a,b,precision){\n    return scalar_eq(a[0],b[0],precision) && scalar_eq(a[1],b[1],precision);\n}\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"loader\"},[_c('p',{staticClass:\"text-center text--primary\"},[_vm._v(\"\\n    \"+_vm._s(_vm.$t('Loading'))+\"\\n  \")]),_vm._v(\" \"),_c('v-progress-linear',{attrs:{\"color\":\"primary\",\"indeterminate\":\"\",\"rounded\":\"\",\"height\":\"5\",\"width\":\"100\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=49371ce0&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"audio/plinko/lose.wav\";","module.exports = __webpack_public_path__ + \"audio/plinko/win.wav\";","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bet-input[data-v-1ba40898] {\\n  max-width: 250px;\\n}\", \"\"]);\n\n// exports\n","export * from \"-!../../../node_modules/style-loader/index.js!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlockPreloader.vue?vue&type=style&index=0&id=0ccd884f&lang=scss&scoped=true&\"","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameMessage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameMessage.vue?vue&type=script&lang=js&\"","<template>\n  <transition name=\"scale\">\n    <v-alert\n      v-if=\"message\"\n      dense\n      outlined\n      text\n      color=\"primary\"\n    >\n      {{ message }}\n    </v-alert>\n  </transition>\n</template>\n\n<script>\nexport default {\n  props: {\n    message: {\n      required: true,\n      validator: value => typeof value === 'string' || value === null\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.scale-enter, .scale-leave-to {\n  transform: scale(0);\n  opacity: 1;\n}\n\n.scale-enter-active, .scale-leave-active {\n  transition: all 0.3s;\n}\n</style>\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".game[data-v-49371ce0] {\\n  width: 100%;\\n}\\n.game[data-v-49371ce0] canvas {\\n  background: none !important;\\n}\\n@media (orientation: landscape) and (min-height: 500px) {\\n.game[data-v-49371ce0] canvas {\\n    max-height: calc(100vh - 250px);\\n}\\n}\\n@media (orientation: landscape) and (max-height: 499px) {\\n.game[data-v-49371ce0] canvas {\\n    max-height: calc(100vh - 50px);\\n}\\n}\\n@media (orientation: portrait) {\\n.game[data-v-49371ce0] canvas {\\n    width: 100%;\\n}\\n}\\n.game.light[data-v-49371ce0] {\\n  position: relative;\\n}\\n.game.light[data-v-49371ce0] canvas {\\n  background: none !important;\\n  position: relative;\\n  z-index: 2;\\n}\\n.loading[data-v-49371ce0] {\\n  display: none !important;\\n}\\n.message-container[data-v-49371ce0] {\\n  height: 0;\\n  margin-top: -20px;\\n  margin-bottom: 20px;\\n  position: relative;\\n  z-index: 100;\\n}\", \"\"]);\n\n// exports\n","module.exports = __webpack_public_path__ + \"audio/plinko/bang.wav\";","module.exports = __webpack_public_path__ + \"audio/plinko/punch.wav\";","module.exports = __webpack_public_path__ + \"audio/common/click.wav\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-form',{ref:\"form\",on:{\"submit\":function($event){$event.preventDefault();return _vm.play($event)}},model:{value:(_vm.formIsValid),callback:function ($$v) {_vm.formIsValid=$$v},expression:\"formIsValid\"}},[_c('div',{staticClass:\"d-flex justify-center flex-wrap mt-3\"},[_vm._t(\"before-bet-input\"),_vm._v(\" \"),_c('v-text-field',{staticClass:\"bet-input text-center\",attrs:{\"dense\":\"\",\"outlined\":\"\",\"full-width\":false,\"label\":_vm.betLabel || _vm.$t('Bet'),\"disabled\":_vm.playing,\"rules\":[_vm.validationInteger, function (v) { return _vm.validationMin(v, _vm.minBet); }, function (v) { return _vm.validationMax(v, Math.min(Math.floor(_vm.account.balance), _vm.maxBet)); }],\"prepend-inner-icon\":\"mdi-minus\",\"append-icon\":\"mdi-plus\"},on:{\"click:prepend-inner\":_vm.decreaseBet,\"click:append\":_vm.increaseBet},scopedSlots:_vm._u([{key:\"prepend-inner\",fn:function(){return [_c('v-btn',{attrs:{\"small\":\"\",\"text\":\"\",\"icon\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.bet = _vm.minBet}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-arrow-down\")])],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"small\":\"\",\"text\":\"\",\"icon\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.decreaseBet}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-minus\")])],1)]},proxy:true},{key:\"append\",fn:function(){return [_c('v-btn',{attrs:{\"small\":\"\",\"text\":\"\",\"icon\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.increaseBet}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-plus\")])],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"small\":\"\",\"text\":\"\",\"icon\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.bet = _vm.maxBet}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-arrow-up\")])],1)]},proxy:true}]),model:{value:(_vm.bet),callback:function ($$v) {_vm.bet=_vm._n($$v)},expression:\"bet\"}}),_vm._v(\" \"),_vm._t(\"after-bet-input\"),_vm._v(\" \"),_c('v-btn',{staticClass:\"ml-2\",attrs:{\"type\":\"submit\",\"color\":\"primary\",\"loading\":_vm.loading,\"disabled\":_vm.disabled || !_vm.formIsValid || _vm.isPlayDisabled}},[_vm._v(\"\\n      \"+_vm._s(_vm.$t('Play'))+\"\\n    \")])],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameMessage.vue?vue&type=style&index=0&id=301c9fc3&lang=scss&scoped=true&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameMessage.vue?vue&type=style&index=0&id=301c9fc3&lang=scss&scoped=true&\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameMessage.vue?vue&type=style&index=0&id=301c9fc3&lang=scss&scoped=true&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=49371ce0&lang=scss&scoped=true&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=49371ce0&lang=scss&scoped=true&\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=49371ce0&lang=scss&scoped=true&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","<template>\r\n  <v-form ref=\"form\" v-model=\"formIsValid\" @submit.prevent=\"play\">\r\n    <div class=\"d-flex justify-center flex-wrap mt-3\">\r\n      <slot name=\"before-bet-input\" />\r\n      <v-text-field\r\n        v-model.number=\"bet\"\r\n        dense\r\n        outlined\r\n        :full-width=\"false\"\r\n        class=\"bet-input text-center\"\r\n        :label=\"betLabel || $t('Bet')\"\r\n        :disabled=\"playing\"\r\n        :rules=\"[validationInteger, v => validationMin(v, minBet), v => validationMax(v, Math.min(Math.floor(account.balance), maxBet))]\"\r\n        prepend-inner-icon=\"mdi-minus\"\r\n        append-icon=\"mdi-plus\"\r\n        @click:prepend-inner=\"decreaseBet\"\r\n        @click:append=\"increaseBet\"\r\n      >\r\n        <template v-slot:prepend-inner>\r\n          <v-btn small text icon color=\"primary\" @click=\"bet = minBet\">\r\n            <v-icon small>mdi-arrow-down</v-icon>\r\n          </v-btn>\r\n          <v-btn small text icon color=\"primary\" @click=\"decreaseBet\">\r\n            <v-icon small>mdi-minus</v-icon>\r\n          </v-btn>\r\n        </template>\r\n        <template v-slot:append>\r\n          <v-btn small text icon color=\"primary\" @click=\"increaseBet\">\r\n            <v-icon small>mdi-plus</v-icon>\r\n          </v-btn>\r\n          <v-btn small text icon color=\"primary\" @click=\"bet = maxBet\">\r\n            <v-icon small>mdi-arrow-up</v-icon>\r\n          </v-btn>\r\n        </template>\r\n      </v-text-field>\r\n      <slot name=\"after-bet-input\" />\r\n      <v-btn\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        :loading=\"loading\"\r\n        :disabled=\"disabled || !formIsValid || isPlayDisabled\"\r\n        class=\"ml-2\"\r\n      >\r\n        {{ $t('Play') }}\r\n      </v-btn>\r\n    </div>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { isInteger } from '~/plugins/utils'\r\nimport FormMixin from '~/mixins/Form'\r\nimport GameMixin from '~/mixins/Game'\r\nimport SoundMixin from '~/mixins/Sound'\r\nimport clickSound from '~/../audio/common/click.wav'\r\n\r\nexport default {\r\n  mixins: [FormMixin, GameMixin, SoundMixin],\r\n\r\n  props: {\r\n    betLabel: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    loading: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    playing: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      bet: null\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapState('auth', ['account']),\r\n    defaultBet () {\r\n      return parseInt(this.config.default_bet_amount, 10)\r\n    },\r\n    minBet () {\r\n      return parseInt(this.config.min_bet, 10)\r\n    },\r\n    maxBet () {\r\n      return parseInt(this.config.max_bet, 10)\r\n    },\r\n    betStep () {\r\n      return parseInt(this.config.bet_change_amount, 10)\r\n    },\r\n    isPlayDisabled () {\r\n      return !this.provablyFairGame.hash || this.playing || this.bet > this.account.balance\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    bet (bet, oldBet) {\r\n      this.$emit('bet-change', isInteger(bet) ? bet : 0)\r\n    }\r\n  },\r\n\r\n  created () {\r\n    // it's important to wait until next tick to ensure config computed property is updated\r\n    // after switching from one game page to another.\r\n    this.$nextTick(() => {\r\n      this.bet = this.defaultBet\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    play () {\r\n      this.sound(clickSound)\r\n      this.$emit('play', this.bet)\r\n    },\r\n    decreaseBet () {\r\n      this.sound(clickSound)\r\n      const bet = this.bet - this.betStep\r\n      this.bet = Math.max(this.minBet, bet)\r\n    },\r\n    increaseBet () {\r\n      this.sound(clickSound)\r\n      const bet = this.bet + this.betStep\r\n      this.bet = Math.min(this.maxBet, bet)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.bet-input {\r\n  max-width: 250px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayControls.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayControls.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"d-flex flex-column fill-height py-3 align-center justify-center\"},[_c('div',{staticClass:\"message-container\",class:{loading: !_vm.ready}},[_c('game-message',{staticClass:\"message\",attrs:{\"message\":_vm.message}})],1),_vm._v(\" \"),_c('div',{ref:\"game\",staticClass:\"game d-flex justify-center align-center\",class:{light: !_vm.$vuetify.theme.dark, loading: !_vm.ready}}),_vm._v(\" \"),_c('play-controls',{class:{loading: !_vm.ready},attrs:{\"loading\":_vm.loading,\"playing\":_vm.playing,\"disabled\":!_vm.formIsValid},on:{\"play\":_vm.play}}),_vm._v(\" \"),(!_vm.ready)?_c('block-preloader'):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Matter from 'matter-js'\nimport Color from 'color'\n// import decomp from 'poly-decomp'\n// window.decomp = decomp\nconst {\n  Bodies,\n  Body,\n  Composite,\n  Engine,\n  Events,\n  World,\n  Render\n} = Matter\n\nexport default class {\n  pegSize = 4\n  ballRadius = 20\n  offsetX = 47\n  offsetY = 60\n  countX = 14\n  countY = 8\n  canvas = null\n  engine = null\n  w = 0\n  h = 0\n  ballColor = '#efefef'\n  pegColor = '#efefef'\n  dom = null\n  render = null\n  frame = 0\n  ballTexture = null\n  pegs = []\n  punch = null\n  bang = null\n  light = false\n  bucket = -1\n  bucketTarget = -1\n  buckets = []\n\n  svgToPng (svg, width, height) {\n    return new Promise(resolve => {\n      if (typeof width === 'undefined') width = 300\n      if (typeof height === 'undefined') height = 300\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')\n      canvas.width = width\n      canvas.height = height\n      const img = new Image()\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, width, height)\n        resolve(canvas.toDataURL())\n      }\n      img.src = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg)\n    })\n  }\n\n  async setup (dom, paytable) {\n    this.countX = paytable.length + 1\n    this.countY = paytable.length - 1\n    this.w = this.offsetX * (this.countX + 1)\n    this.h = this.offsetY * this.countY + this.offsetY\n    this.dom = dom\n    this.engine = Engine.create()\n    Engine.run(this.engine)\n    this.engine.timing.timeScale = 1.25\n    this.engine.world.gravity.y = 2\n    this.render = Render.create({\n      element: this.dom,\n      engine: this.engine,\n      options: {\n        width: this.w,\n        height: this.h,\n        showAngleIndicator: false,\n        wireframes: false\n        // pixelRatio: 'auto'\n      }\n    })\n    Render.run(this.render)\n    Events.on(this.engine, 'collisionStart', (...args) => this.collisionStart(...args))\n    Events.on(this.engine, 'collisionActive', (...args) => this.collisionActive(...args))\n    Events.on(this.engine, 'collisionEnd', (...args) => this.collisionEnd(...args))\n    Events.on(this.render, 'beforeRender', () => this.draw())\n    let xStart = this.offsetX\n    let cnt = this.countX\n\n    const ballSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"291.428\" height=\"291.428\" viewBox=\"0 0 77.107 77.107\"><defs><radialGradient xlink:href=\"#a\" id=\"b\" cx=\"47.448\" cy=\"32.282\" fx=\"47.448\" fy=\"32.282\" r=\"38.554\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"matrix(.29267 1.48514 -1.34936 .26591 55.437 -52.406)\"/><linearGradient id=\"a\"><stop offset=\"0\" stop-color=\"${Color(this.ballColor).lighten(this.light ? 0.5 : 0)}\"/><stop offset=\"1\" stop-color=\"${Color(this.ballColor).darken(this.light ? 0 : 0.75)}\"/></linearGradient></defs><circle style=\"mix-blend-mode:normal\" cx=\"38.554\" cy=\"38.554\" r=\"38.554\" fill=\"url(#b)\" fill-rule=\"evenodd\"/><ellipse ry=\"9.347\" rx=\"6.221\" cy=\"2.039\" cx=\"-36.407\" transform=\"matrix(-.66009 -.75119 .759 -.6511 0 0)\" fill=\"#ffffff\"/></svg>`\n    this.ballTexture = await this.svgToPng(ballSvg, this.ballRadius * 2, this.ballRadius * 2)\n    const pegSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"291.428\" height=\"291.428\" viewBox=\"0 0 77.107 77.107\"><g fill-rule=\"evenodd\"><circle cx=\"38.554\" cy=\"38.554\" r=\"38.554\" fill=\"${this.light ? '#aaaaaa' : '#777777'}\"/><path d=\"M38.422 0A38.554 38.554 0 000 38.554a38.554 38.554 0 003.193 15.361 38.554 38.554 0 0015.36 3.192 38.554 38.554 0 0038.554-38.554 38.554 38.554 0 00-3.192-15.36A38.554 38.554 0 0038.554 0a38.554 38.554 0 00-.132 0z\" fill=\"${this.light ? '#efefef' : '#dddddd'}\"/></g></svg>`\n    const pegTexture = await this.svgToPng(pegSvg, this.pegSize * 2, this.pegSize * 2)\n    const pegLightSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1165.712\" height=\"1165.712\" viewBox=\"0 0 308.428 308.428\"><defs><radialGradient xlink:href=\"#a\" id=\"b\" cx=\"154.214\" cy=\"154.214\" fx=\"154.214\" fy=\"154.214\" r=\"154.214\" gradientUnits=\"userSpaceOnUse\"/><linearGradient id=\"a\"><stop offset=\"0\" stop-color=\"${this.light ? this.pegColor : '#fff'}\" stop-opacity=\"${this.light ? '0.5' : '0.35'}\"/><stop offset=\"1\" stop-color=\"${this.light ? this.pegColor : '#fff'}\" stop-opacity=\"0\"/></linearGradient></defs><g fill-rule=\"evenodd\"><circle cx=\"154.214\" cy=\"154.214\" r=\"154.214\" fill=\"url(#b)\"/><g transform=\"translate(115.66 115.66)\"><circle cx=\"38.554\" cy=\"38.554\" r=\"38.554\" fill=\"${Color(this.pegColor).lighten(0)}\"/><path d=\"M38.422 0A38.554 38.554 0 000 38.554a38.554 38.554 0 003.193 15.361 38.554 38.554 0 0015.36 3.192 38.554 38.554 0 0038.554-38.554 38.554 38.554 0 00-3.192-15.36A38.554 38.554 0 0038.554 0a38.554 38.554 0 00-.132 0z\" fill=\"${Color(this.pegColor).lighten(0.5)}\"/></g></g></svg>`\n    const pegLightTexture = await this.svgToPng(pegLightSvg, this.pegSize * 8, this.pegSize * 8)\n\n    for (let y = this.countY - 1; y >= 0; y--) {\n      for (let x = 0; x < cnt; x++) {\n        const peg = this.addCircle({\n          x: x * this.offsetX + xStart,\n          y: y * this.offsetY + this.offsetY,\n          r: this.pegSize,\n          options: {\n            isStatic: true,\n            density: 5,\n            restitution: 1,\n            collisionFilter: { category: 1 },\n            label: `peg-${y}-${x}`,\n            activePeg: null,\n            render: { zIndex: 0, sprite: { texture: pegTexture } }\n          }\n        })\n        peg.activePeg = this.addCircle({\n          x: x * this.offsetX + xStart,\n          y: y * this.offsetY + this.offsetY,\n          r: this.pegSize,\n          options: {\n            isStatic: true,\n            collisionFilter: { category: 4, mask: 0, group: -1 },\n            render: { visible: false, zIndex: 1, opacity: 0, sprite: { texture: pegLightTexture } }\n          }\n        })\n        this.pegs.push(peg)\n      }\n      cnt--\n      xStart += this.offsetX / 2\n    }\n    paytable.forEach(async (pay, i) => {\n      const svg = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"47\" height=\"32\" viewBox=\"0 0 47 32\">\n          <g>\n            <rect x=\"1\" y=\"1\" width=\"45\" height=\"26\" fill=\"transparent\" rx=\"3\" stroke=\"${this.ballColor}\" stroke-width=\"1\" />\n            <text x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\" font-family=\"Verdana\" font-size=\"16\" fill=\"${this.ballColor}\">${pay}</text>\n          </g>\n        </svg>\n      `\n      const svgA = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"47\" height=\"32\" viewBox=\"0 0 47 32\">\n          <g>\n            <rect x=\"1\" y=\"1\" width=\"45\" height=\"26\" fill=\"${this.ballColor}\"/>\n            <text x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\" font-family=\"Verdana\" font-size=\"16\" fill=\"white\">${pay}</text>\n          </g>\n        </svg>\n      `\n      const payTexture = await this.svgToPng(svg, 45, 32)\n      const payATexture = await this.svgToPng(svgA, 45, 32)\n      const body = Bodies.rectangle(this.offsetX + this.offsetX * i + this.offsetX * 0.5, this.offsetY * this.countY + this.offsetY * 0.5 + 10, this.offsetX, this.offsetY * 0.5, {\n        isStatic: true,\n        label: 'bucket-' + i,\n        render: { zIndex: 4, sprite: { texture: payTexture } }\n      })\n      this.addBody(body)\n      body.bodyActive = Bodies.rectangle(this.offsetX + this.offsetX * i + this.offsetX * 0.5, this.offsetY * this.countY + this.offsetY * 0.5 + 10, this.offsetX, this.offsetY * 0.5, {\n        isStatic: true,\n        label: 'bucket-active' + i,\n        render: { visible: false, opacity: 0, zIndex: 45, sprite: { texture: payATexture } }\n      })\n      this.addBody(body.bodyActive)\n      this.buckets.push(body)\n    })\n  }\n\n  addBody (...bodies) {\n    World.add(this.engine.world, ...bodies)\n  }\n\n  removeBody (body) {\n    Matter.Composite.remove(this.engine.world, body)\n  }\n\n  addCircle ({\n    x = 0,\n    y = 0,\n    r = 20,\n    options = {}\n  } = {}) {\n    const body = Bodies.circle(x, y, r, options)\n    this.addBody(body)\n    return body\n  }\n\n  pull (path, bucket, callback) {\n    this.bucketTarget = bucket\n    // path = [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]\n    const pegs = [1]\n    path.forEach(d => pegs.push(pegs[pegs.length - 1] + d))\n    this.addCircle({\n      x: this.w * 0.5,\n      y: 0,\n      r: this.ballRadius,\n      options: {\n        callback,\n        density: 0.1,\n        restitution: 0.9,\n        torque: 0,\n        label: 'ball',\n        path,\n        pegs,\n        collisionFilter: { category: 4, mask: 1 },\n        render: {\n          zIndex: 3,\n          sprite: {\n            texture: this.ballTexture\n          }\n        }\n      }\n    })\n    const allBodies = Composite.allBodies(this.engine.world)\n    allBodies.sort((a, b) => {\n      const zIndexA = a.render && typeof a.render.zIndex !== 'undefined' ? a.render.zIndex : 0\n      const zIndexB = b.render && typeof b.render.zIndex !== 'undefined' ? b.render.zIndex : 0\n      return zIndexA - zIndexB\n    })\n  }\n\n  draw () {\n    this.frame++\n    this.pegs.forEach(peg => {\n      if (peg.activePeg && peg.activePeg.render.visible) {\n        peg.activePeg.render.opacity -= 0.04\n        if (peg.activePeg.render.opacity <= 0) {\n          peg.activePeg.render.opacity = 0\n          peg.activePeg.render.visible = false\n        }\n      }\n    })\n    this.buckets.forEach(bucket => {\n      const x = parseInt(bucket.label.split('-')[1])\n      if (x === this.bucket && bucket.bodyActive.render.opacity < 1) {\n        bucket.bodyActive.render.opacity += 0.1\n        if (bucket.bodyActive.render.opacity > 1) bucket.bodyActive.render.opacity = 1\n        if (!bucket.bodyActive.render.visible) bucket.bodyActive.render.visible = true\n      } else if (x !== this.bucket && bucket.bodyActive.render.visible) {\n        bucket.bodyActive.render.opacity -= 0.1\n        if (bucket.bodyActive.render.opacity <= 0) {\n          bucket.bodyActive.render.opacity = 0\n          bucket.bodyActive.render.visible = false\n        }\n      }\n    })\n    const bodies = Composite.allBodies(this.engine.world)\n    bodies.forEach(n => {\n      const render = n.render\n      if (!render || !render.visible) {\n        return\n      }\n      if (n.label === 'ball') {\n        n.angle = 0\n        if (n.pegs.length && n.position.y > (n.pegs.length - 1) * this.offsetY + this.offsetY) {\n          if (n.path[n.pegs.length]) {\n            if (n.path[n.pegs.length] === 0 && n.velocity.x > 0) {\n              Body.setVelocity(n, { x: -0.05, y: n.velocity.y })\n            } else if (n.path[n.pegs.length] === 1 && n.velocity.x < 0) {\n              Body.setVelocity(n, { x: 0.05, y: n.velocity.y })\n            }\n          }\n        }\n        if (!(this.frame % 5)) {\n          this.addCircle({\n            x: n.position.x - this.ballRadius + this.ballRadius * 2 * Math.random(),\n            y: n.position.y,\n            r: this.ballRadius * 0.19 * Math.random() + this.ballRadius * 0.01,\n            options: {\n              // isStatic: 1,\n              label: 'bubble',\n              collisionFilter: { category: 8, mask: 0, group: -1 },\n              size: 1,\n              render: {\n                fillStyle: Color(this.ballColor).lighten(0.25),\n                zIndex: 4\n              }\n            }\n          })\n        }\n        if (n.position.y > this.offsetY * this.countY) {\n          //  this.h + this.ballRadius\n          const a = (Math.PI * 0.7) / 25\n          for (let i = Math.PI * 0.15; i < Math.PI * 0.85; i += a) {\n            const s = 3 * Math.random() + 3\n            const x = Math.cos(i) * s\n            const y = -Math.sin(i) * s\n            const body = this.addCircle({\n              x: n.position.x,\n              y: n.position.y,\n              r: this.ballRadius * 0.19 * Math.random() + this.ballRadius * 0.01,\n              options: {\n                label: 'bang',\n                collisionFilter: { category: 4, mask: 0, group: -1 },\n                size: 1,\n                density: 0.0000001,\n                timeScale: 0.3,\n                render: {\n                  fillStyle: Color(this.ballColor).lighten(0.35),\n                  zIndex: 4\n                }\n              }\n            })\n            Body.setVelocity(body, { x, y })\n          }\n          this.removeBody(n)\n          if (typeof this.bang === 'function') this.bang()\n          if (typeof n.callback === 'function') n.callback()\n          this.bucket = this.bucketTarget\n        }\n      } else if (n.label === 'bubble') {\n        n.size -= 0.001\n        if (n.size < 0.95) {\n          this.removeBody(n)\n        } else {\n          Body.scale(n, n.size, n.size)\n          Body.setVelocity(n, { x: 0, y: -0.6 - (0.5 - (1 - n.size) * 10) })\n        }\n      } else if (n.label === 'bang') {\n        n.size -= 0.001\n        if (n.size < 0.95) {\n          this.removeBody(n)\n        } else {\n          Body.scale(n, n.size, n.size)\n        }\n      }\n    })\n  }\n\n  collisionStart ({ pairs }) {\n    pairs.forEach(({\n      bodyA,\n      bodyB\n    }) => {\n      if (bodyA.label === 'ball' && bodyB.label.substr(0, 3) === 'peg') {\n        if (typeof this.punch === 'function') this.punch()\n        bodyB.activePeg.render.opacity = 1\n        bodyB.activePeg.render.visible = true\n      } else if (bodyB.label === 'ball' && bodyA.label.substr(0, 3) === 'peg') {\n        if (typeof this.punch === 'function') this.punch()\n        bodyA.activePeg.render.opacity = 1\n        bodyA.activePeg.render.visible = true\n      }\n    })\n  }\n\n  collisionActive ({ pairs }) {\n    pairs.forEach(({\n      bodyA,\n      bodyB\n    }) => {\n      let body, bodyPeg\n      if (bodyA.label === 'ball' && bodyB.label.substr(0, 3) === 'peg') {\n        // bodyB.activePeg.render.opacity = 1\n        body = bodyA\n        bodyPeg = bodyB\n      } else if (bodyB.label === 'ball' && bodyA.label.substr(0, 3) === 'peg') {\n        // bodyA.activePeg.render.opacity = 1\n        body = bodyB\n        bodyPeg = bodyA\n      } else {\n        return\n      }\n      const y = parseInt(bodyPeg.label.split('-')[1])\n      const x = parseInt(bodyPeg.label.split('-')[2])\n      if (y === body.last_y) {\n        if (x === body.pegs[y]) {\n          if (body.path[y] === 0 && body.position.x > bodyPeg.position.x + this.ballRadius * 0.25) {\n            Body.applyForce(body, body.position, { x: -0.15, y: 1.5 })\n          } else if (body.path[y] === 1 && body.position.x < bodyPeg.position.x - this.ballRadius * 0.25) {\n            Body.applyForce(body, body.position, { x: 0.15, y: 1.5 })\n          } else if (body.path[y] === 0 && (body.velocity.x > 0) && body.position.x > bodyPeg.position.x - this.ballRadius * 0.25) {\n            // Body.setVelocity(body, { x: -(body.position.y > bodyPeg.position.y ? ((body.position.y - bodyPeg.position.y) / 10) : 0), y: body.velocity.y })\n            Body.applyForce(body, body.position, { x: -0.15 - (body.position.y > bodyPeg.position.y ? ((body.position.y - bodyPeg.position.y) / 2) : 0), y: 0 })\n          } else if (body.path[y] === 1 && (body.velocity.x < 0) && body.position.x < bodyPeg.position.x + this.ballRadius * 0.25) {\n            // Body.setVelocity(body, { x: +(body.position.y < bodyPeg.position.y ? ((bodyPeg.position.y - body.position.y) / 10) : 0), y: body.velocity.y })\n            Body.applyForce(body, body.position, { x: +0.15 + (body.position.y < bodyPeg.position.y ? ((bodyPeg.position.y - body.position.y) / 2) : 0), y: 0 })\n          }\n        }\n      }\n    })\n  }\n\n  collisionEnd ({ pairs }) {\n    pairs.forEach(({\n      bodyA,\n      bodyB\n    }) => {\n      let body, bodyPeg\n      if (bodyA.label === 'ball' && bodyB.label.substr(0, 3) === 'peg') {\n        body = bodyA\n        bodyPeg = bodyB\n      } else if (bodyB.label === 'ball' && bodyA.label.substr(0, 3) === 'peg') {\n        body = bodyB\n        bodyPeg = bodyA\n      } else {\n        return\n      }\n      const y = parseInt(bodyPeg.label.split('-')[1])\n      const x = parseInt(bodyPeg.label.split('-')[2])\n      if (typeof body.last_y === 'undefined') body.last_y = -1\n      if (y > body.last_y) {\n        body.last_y = y\n        let vx = 0\n        if (body.path[y] === 0) {\n          vx = -1 * (0.15 + 0.5 * Math.random() + (body.position.x > bodyPeg.position.x ? ((body.position.x - bodyPeg.position.x) / 2) : 0))\n        } else {\n          vx = +1 * (0.15 + 0.5 * Math.random() + (body.position.x < bodyPeg.position.x ? ((bodyPeg.position.x - body.position.x) / 2) : 0))\n        }\n        Body.setVelocity(body, { x: vx, y: body.velocity.y })\n      } else if (y < body.last_y) {\n        Body.setVelocity(body, { x: 0, y: body.velocity.y })\n      } else if (y === body.last_y) {\n        if (x === body.pegs[y]) {\n          if (body.path[y] === 0 && (body.velocity.x > 0)) {\n            Body.setVelocity(body, { x: (body.path[y] ? 1 : -1) * (0.15 + (body.position.x > bodyPeg.position.x ? ((body.position.x - bodyPeg.position.x) / 2) : 0) + 0.5 * Math.random()), y: (body.velocity.y < 1.5 ? 1.5 : body.velocity.y) })\n          } else if (body.path[y] === 1 && (body.velocity.x < 0)) {\n            Body.setVelocity(body, { x: (body.path[y] ? 1 : -1) * (0.15 + (body.position.x < bodyPeg.position.x ? ((bodyPeg.position.x - body.position.x) / 2) : 0) + 0.5 * Math.random()), y: (body.velocity.y < 1.5 ? 1.5 : body.velocity.y) })\n          } else if (body.path[y] === 0 && body.velocity.x < -2) {\n            Body.setVelocity(body, { x: -2, y: body.velocity.y })\n          } else if (body.path[y] === 0 && body.velocity.x < -2) {\n            Body.setVelocity(body, { x: 2, y: body.velocity.y })\n          }\n        }\n        if (x > body.pegs[y] && body.velocity.x > 0) {\n          Body.setVelocity(body, { x: -0.1, y: body.velocity.y < 0.1 ? 0.15 : body.velocity.y })\n        } else if (x < body.pegs[y] && body.velocity.x < 0) {\n          Body.setVelocity(body, { x: 0.1, y: body.velocity.y < 0.1 ? 0.15 : body.velocity.y })\n        } else if (x > body.pegs[y] && body.velocity.x < -2) {\n          Body.setVelocity(body, { x: -2, y: body.velocity.y })\n        } else if (x < body.pegs[y] && body.velocity.x > 2) {\n          Body.setVelocity(body, { x: 2, y: body.velocity.y })\n        }\n      }\n    })\n  }\n}\n","<template>\n  <div class=\"d-flex flex-column fill-height py-3 align-center justify-center\">\n    <div class=\"message-container\" :class=\"{loading: !ready}\">\n      <game-message class=\"message\" :message=\"message\" />\n    </div>\n    <div ref=\"game\" class=\"game d-flex justify-center align-center\" :class=\"{light: !$vuetify.theme.dark, loading: !ready}\"></div>\n    <play-controls :loading=\"loading\" :playing=\"playing\" :disabled=\"!formIsValid\" :class=\"{loading: !ready}\" @play=\"play\" />\n    <block-preloader v-if=\"!ready\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapState, mapActions } from 'vuex'\nimport FormMixin from '~/mixins/Form'\nimport GameMixin from '~/mixins/Game'\nimport SoundMixin from '~/mixins/Sound'\nimport clickSound from '~/../audio/common/click.wav'\nimport bangSound from 'packages/plinko/resources/audio/bang.wav'\nimport punchSound from 'packages/plinko/resources/audio/punch.wav'\nimport winSound from 'packages/plinko/resources/audio/win.wav'\nimport loseSound from 'packages/plinko/resources/audio/lose.wav'\nimport PlayControls from '~/components/Games/PlayControls'\nimport BlockPreloader from '~/components/BlockPreloader'\nimport GameMessage from '~/components/Games/GameMessage'\n\nimport Plinko from './helpers/plinko.js'\n\nexport default {\n  name: 'Plinko',\n\n  components: { BlockPreloader, PlayControls, GameMessage },\n\n  mixins: [FormMixin, GameMixin, SoundMixin],\n\n  data () {\n    return {\n      clickSound,\n      formIsValid: true,\n      loading: false,\n      playing: false,\n      plinko: null,\n      ready: false,\n      message: null\n    }\n  },\n\n  computed: {\n    ...mapState('auth', ['account'])\n  },\n\n  created () {\n    //\n  },\n\n  mounted () {\n    this.$nextTick(async () => {\n      this.plinko = new Plinko()\n      this.plinko.ballColor = this.$vuetify.theme.currentTheme.primary\n      this.plinko.pegColor = this.$vuetify.theme.currentTheme.accent\n      this.plinko.punch = () => this.sound(punchSound)\n      this.plinko.bang = () => this.sound(bangSound)\n      this.plinko.light = !this.$vuetify.theme.dark\n      await this.plinko.setup(this.$refs.game, this.config.paytable)\n      this.ready = true\n    })\n  },\n\n  methods: {\n    ...mapActions({\n      updateUserAccountBalance: 'auth/updateUserAccountBalance',\n      setProvablyFairGame: 'provably-fair/set'\n    }),\n    async play (bet) {\n      this.message = null\n      this.plinko.bucket = -1\n      this.loading = true\n      this.playing = true\n      this.win = 0\n\n      // update user balance\n      this.updateUserAccountBalance(this.account.balance - bet)\n\n      // API request params\n      const endpoint = this.getRoute('play')\n      const requestParams = { hash: this.provablyFairGame.hash, bet }\n\n      // execute the action\n      const { data: game } = await axios.post(endpoint, requestParams)\n      this.loading = false\n\n      await (path => new Promise(resolve => this.plinko.pull(path, game.gameable.bucket, resolve)))(game.gameable.path)\n\n      this.setProvablyFairGame({ key: this.gamePackageId, game: game.pf_game })\n      this.win = game.win\n      this.playing = false\n\n      // update balance\n      this.updateUserAccountBalance(game.account.balance)\n      // play sound\n      setTimeout(() => {\n        if (game.win > 0) {\n          this.sound(winSound)\n          this.message = this.$t('You won') + ' ' + game.win\n        } else {\n          this.sound(loseSound)\n        }\n      }, 500)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .game {\n    width: 100%;\n  }\n  .game::v-deep canvas {\n      @media (orientation: landscape) and (min-height: 500px) {\n        max-height: calc(100vh - 250px);\n      }\n      @media (orientation: landscape) and (max-height: 499px) {\n        max-height: calc(100vh - 50px);\n      }\n      @media (orientation: portrait) {\n        width: 100%;\n      }\n      background: none !important;\n  }\n  .game.light::v-deep {\n    canvas {\n      background: none !important;\n      position: relative;\n      z-index:2\n    }\n    position: relative;\n  }\n  .loading {\n    display: none !important;\n  }\n  .message-container {\n    height: 0;\n    margin-top: -20px;\n    margin-bottom: 20px;\n    position: relative;\n    z-index: 100;\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=49371ce0&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=49371ce0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"49371ce0\",\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport { config } from '~/plugins/config'\r\nimport { route } from '~/plugins/route'\r\n\r\nexport default {\r\n  computed: {\r\n    gamePackageId () {\r\n      return this.$route.params.game\r\n    },\r\n    gameSlug () {\r\n      return this.$route.params.slug\r\n    },\r\n    config () {\r\n      return this.gameSlug\r\n        ? config(`${this.gamePackageId}`).variations.find(o => o.slug === this.gameSlug)\r\n        : config(`${this.gamePackageId}`)\r\n    },\r\n    provablyFairGame () {\r\n      return this.$store.getters['provably-fair/get'](this.gamePackageId) || {}\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getRoute (action) {\r\n      return route(`games.${this.gamePackageId}.${action}`)\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import store from '~/store'\n\nexport function route (name) {\n  return store.getters['route/get'](name)\n}\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=js&\"","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayControls.vue?vue&type=style&index=0&id=1ba40898&lang=scss&scoped=true&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayControls.vue?vue&type=style&index=0&id=1ba40898&lang=scss&scoped=true&\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayControls.vue?vue&type=style&index=0&id=1ba40898&lang=scss&scoped=true&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*!\n * matter-js 0.16.0 by @liabru 2021-01-17\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"poly-decomp\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Matter\", [\"poly-decomp\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Matter\"] = factory(require(\"poly-decomp\"));\n\telse\n\t\troot[\"Matter\"] = factory(root[\"decomp\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__27__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 24);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        var events = object.events;\n        \n        if (events && Common.keys(events).length > 0) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(4);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n            .concat(Composite.allConstraints(composite))\n            .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Render = __webpack_require__(10);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(15);\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                strokeStyle: null,\n                fillStyle: null,\n                lineWidth: null,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            _original: null\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\n                continue;\n\n            value = settings[property];\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            case 'centre':\n                Body.setCentre(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                part._original = null;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Set the centre of mass of the body. \n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n    Body.setCentre = function(body, centre, relative) {\n        if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n        } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n        }\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = __webpack_require__(4);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(15);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointAWorld = function(constraint) {\n        return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + constraint.pointA.x,\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + constraint.pointA.y\n        };\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointBWorld = function(constraint) {\n        return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + constraint.pointB.x,\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + constraint.pointB.y\n        };\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(18);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            confirmedActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = __webpack_require__(0);\nvar Composite = __webpack_require__(5);\nvar Bounds = __webpack_require__(1);\nvar Events = __webpack_require__(4);\nvar Grid = __webpack_require__(11);\nvar Vector = __webpack_require__(2);\nvar Mouse = __webpack_require__(14);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#14151f',\n                wireframeBackground: '#14151f',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n            // @if DEBUG\n            if (metrics.extended) {\n                if (metrics.timing) {\n                    text += \"delta: \" + metrics.timing.delta.toFixed(3) + space;\n                    text += \"correction: \" + metrics.timing.correction.toFixed(3) + space;\n                }\n\n                text += \"bodies: \" + bodies.length + space;\n\n                if (engine.broadphase.controller === Grid)\n                    text += \"buckets: \" + metrics.buckets + space;\n\n                text += \"\\n\";\n\n                text += \"collisions: \" + metrics.collisions + space;\n                text += \"pairs: \" + engine.pairs.list.length + space;\n                text += \"broad: \" + metrics.broadEff + space;\n                text += \"mid: \" + metrics.midEff + space;\n                text += \"narrow: \" + metrics.narrowEff + space;\n            }\n            // @endif\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                grid.bucketWidth,\n                grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(9);\nvar Detector = __webpack_require__(12);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        // @if DEBUG\n        var metrics = engine.metrics;\n        metrics.broadphaseTests = 0;\n        // @endif\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                // @if DEBUG\n                metrics.broadphaseTests += 1;\n                // @endif\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = __webpack_require__(13);\nvar Pair = __webpack_require__(9);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        // @if DEBUG\n        var metrics = engine.metrics;\n        // @endif\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n            // @if DEBUG\n            metrics.midphaseTests += 1;\n            // @endif\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n                            // @if DEBUG\n                            metrics.narrowphaseTests += 1;\n                            if (collision.reused)\n                                metrics.narrowReuseCount += 1;\n                            // @endif\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                                // @if DEBUG\n                                metrics.narrowDetections += 1;\n                                // @endif\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bounds = __webpack_require__(1);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @param {number} [removeDuplicatePoints=0.01]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n        var decomp = __webpack_require__(27),\n            body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var parts = pattern.exec(range);\n        var major = Number(parts[4]);\n        var minor = Number(parts[5]);\n        var patch = Number(parts[6]);\n\n        return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var r = Plugin.versionParse(range),\n            v = Plugin.versionParse(version);\n\n        if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (r.operator === '>') {\n                return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n                return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n                if (r.major > 0) {\n                    return v.major === r.major && v.number >= r.number;\n                }\n\n                if (r.minor > 0) {\n                    return v.minor === r.minor && v.patch >= r.patch;\n                }\n\n                return v.patch === r.patch;\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n    /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n    /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pairsList[i].confirmedActive = false;\n        }\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                    pair.confirmedActive = true;\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && !pair.confirmedActive) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                Vector.add(bodyA.positionImpulse, \n                    Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = __webpack_require__(19);\nvar Sleeping = __webpack_require__(7);\nvar Resolver = __webpack_require__(21);\nvar Render = __webpack_require__(10);\nvar Pairs = __webpack_require__(20);\nvar Metrics = __webpack_require__(23);\nvar Grid = __webpack_require__(11);\nvar Events = __webpack_require__(4);\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // back compatibility\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // back compatibility\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // back compatibility\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n        // @if DEBUG\n        engine.metrics = Metrics.create(engine.metrics);\n        // @endif\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // @if DEBUG\n        // reset metrics logging\n        Metrics.reset(engine.metrics);\n        // @endif\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // @if DEBUG\n        // update metrics log\n        Metrics.update(engine.metrics, engine);\n        // @endif\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// @if DEBUG\n/**\n* _Internal Class_, not generally used outside of the engine's internals.\n*\n*/\n\nvar Metrics = {};\n\nmodule.exports = Metrics;\n\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new metrics.\n     * @method create\n     * @private\n     * @return {metrics} A new metrics\n     */\n    Metrics.create = function(options) {\n        var defaults = {\n            extended: false,\n            narrowDetections: 0,\n            narrowphaseTests: 0,\n            narrowReuse: 0,\n            narrowReuseCount: 0,\n            midphaseTests: 0,\n            broadphaseTests: 0,\n            narrowEff: 0.0001,\n            midEff: 0.0001,\n            broadEff: 0.0001,\n            collisions: 0,\n            buckets: 0,\n            bodies: 0,\n            pairs: 0\n        };\n\n        return Common.extend(defaults, false, options);\n    };\n\n    /**\n     * Resets metrics.\n     * @method reset\n     * @private\n     * @param {metrics} metrics\n     */\n    Metrics.reset = function(metrics) {\n        if (metrics.extended) {\n            metrics.narrowDetections = 0;\n            metrics.narrowphaseTests = 0;\n            metrics.narrowReuse = 0;\n            metrics.narrowReuseCount = 0;\n            metrics.midphaseTests = 0;\n            metrics.broadphaseTests = 0;\n            metrics.narrowEff = 0;\n            metrics.midEff = 0;\n            metrics.broadEff = 0;\n            metrics.collisions = 0;\n            metrics.buckets = 0;\n            metrics.pairs = 0;\n            metrics.bodies = 0;\n        }\n    };\n\n    /**\n     * Updates metrics.\n     * @method update\n     * @private\n     * @param {metrics} metrics\n     * @param {engine} engine\n     */\n    Metrics.update = function(metrics, engine) {\n        if (metrics.extended) {\n            var world = engine.world,\n                bodies = Composite.allBodies(world);\n\n            metrics.collisions = metrics.narrowDetections;\n            metrics.pairs = engine.pairs.list.length;\n            metrics.bodies = bodies.length;\n            metrics.midEff = (metrics.narrowDetections / (metrics.midphaseTests || 1)).toFixed(2);\n            metrics.narrowEff = (metrics.narrowDetections / (metrics.narrowphaseTests || 1)).toFixed(2);\n            metrics.broadEff = (1 - (metrics.broadphaseTests / (bodies.length || 1))).toFixed(2);\n            metrics.narrowReuse = (metrics.narrowReuseCount / (metrics.narrowphaseTests || 1)).toFixed(2);\n            //var broadphase = engine.broadphase[engine.broadphase.current];\n            //if (broadphase.instance)\n            //    metrics.buckets = Common.keys(broadphase.instance.buckets).length;\n        }\n    };\n\n})();\n// @endif\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Matter = module.exports = __webpack_require__(25);\r\n\r\nMatter.Body = __webpack_require__(6);\r\nMatter.Composite = __webpack_require__(5);\r\nMatter.World = __webpack_require__(19);\r\n\r\nMatter.Contact = __webpack_require__(18);\r\nMatter.Detector = __webpack_require__(12);\r\nMatter.Grid = __webpack_require__(11);\r\nMatter.Pairs = __webpack_require__(20);\r\nMatter.Pair = __webpack_require__(9);\r\nMatter.Query = __webpack_require__(26);\r\nMatter.Resolver = __webpack_require__(21);\r\nMatter.SAT = __webpack_require__(13);\r\n\r\nMatter.Constraint = __webpack_require__(8);\r\nMatter.MouseConstraint = __webpack_require__(28);\r\n\r\nMatter.Common = __webpack_require__(0);\r\nMatter.Engine = __webpack_require__(22);\r\nMatter.Events = __webpack_require__(4);\r\nMatter.Mouse = __webpack_require__(14);\r\nMatter.Runner = __webpack_require__(29);\r\nMatter.Sleeping = __webpack_require__(7);\r\nMatter.Plugin = __webpack_require__(17);\r\n\r\n// @if DEBUG\r\nMatter.Metrics = __webpack_require__(23);\r\n// @endif\r\n\r\nMatter.Bodies = __webpack_require__(16);\r\nMatter.Composites = __webpack_require__(30);\r\n\r\nMatter.Axes = __webpack_require__(15);\r\nMatter.Bounds = __webpack_require__(1);\r\nMatter.Svg = __webpack_require__(31);\r\nMatter.Vector = __webpack_require__(2);\r\nMatter.Vertices = __webpack_require__(3);\r\n\r\nMatter.Render = __webpack_require__(10);\r\nMatter.RenderPixi = __webpack_require__(32);\r\n\r\n// aliases\r\n\r\nMatter.World.add = Matter.Composite.add;\r\nMatter.World.remove = Matter.Composite.remove;\r\nMatter.World.addComposite = Matter.Composite.addComposite;\r\nMatter.World.addBody = Matter.Composite.addBody;\r\nMatter.World.addConstraint = Matter.Composite.addConstraint;\r\nMatter.World.clear = Matter.Composite.clear;\r\nMatter.Engine.run = Matter.Runner.run;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n*\r\n* @class Matter\r\n*/\r\n\r\nvar Matter = {};\r\n\r\nmodule.exports = Matter;\r\n\r\nvar Plugin = __webpack_require__(17);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * The library name.\r\n     * @property name\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.name = 'matter-js';\r\n\r\n    /**\r\n     * The library version.\r\n     * @property version\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.version =  true ? \"0.16.0\" : undefined;\r\n\r\n    /**\r\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n     * @property uses\r\n     * @type {Array}\r\n     */\r\n    Matter.uses = [];\r\n\r\n    /**\r\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n     * @property used\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\r\n    Matter.used = [];\r\n\r\n    /**\r\n     * Installs the given plugins on the `Matter` namespace.\r\n     * This is a short-hand for `Plugin.use`, see it for more information.\r\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n     */\r\n    Matter.use = function() {\r\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method before\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.before = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathBefore(Matter, path, func);\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method after\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.after = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathAfter(Matter, path, func);\r\n    };\r\n\r\n})();\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(2);\nvar SAT = __webpack_require__(13);\nvar Bounds = __webpack_require__(1);\nvar Bodies = __webpack_require__(16);\nvar Vertices = __webpack_require__(3);\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__27__;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(3);\nvar Sleeping = __webpack_require__(7);\nvar Mouse = __webpack_require__(14);\nvar Events = __webpack_require__(4);\nvar Detector = __webpack_require__(12);\nvar Constraint = __webpack_require__(8);\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(4);\nvar Engine = __webpack_require__(22);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // back compatibility\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // back compatibility\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // back compatibility\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // back compatibility\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // back compatibility\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // back compatibility\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // back compatibility\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bodies = __webpack_require__(16);\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(1);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = __webpack_require__(1);\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Events = __webpack_require__(4);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                    ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n\n/***/ })\n/******/ ]);\n});"],"sourceRoot":""}