{"version":3,"sources":["webpack:///./packages/slots/resources/js/pages/game.vue?65d6","webpack:///./packages/slots/resources/js/pages/game.vue?8866","webpack:///packages/slots/resources/js/pages/game.vue","webpack:///./packages/slots/resources/js/pages/game.vue?e946","webpack:///./packages/slots/resources/js/pages/game.vue","webpack:///./packages/slots/resources/images/animation.png","webpack:///./packages/slots/resources/audio/win.wav","webpack:///./packages/slots/resources/audio/spin.wav","webpack:///./packages/slots/resources/js/pages/game.vue?4e4a","webpack:///./packages/slots/resources/audio/lose.wav","webpack:///./packages/slots/resources/js/pages/game.vue?26de","webpack:///resources/js/mixins/Game.vue","webpack:///./resources/js/mixins/Game.vue?b66b","webpack:///./resources/js/plugins/route.js","webpack:///./resources/js/mixins/Game.vue","webpack:///./resources/audio/common/click.wav","webpack:///./packages/slots/resources/audio/start.wav","webpack:///./packages/slots/resources/audio/stop.wav"],"names":["module","exports","push","i","undefined","winLine","x","component","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","message","_v","_l","line_cols","key","class","line_blink","indexOf","animation","is_line_showig","playing","on","$event","lineShow","lineHide","sound","lines","linesShow","_s","ref","loading","formIsValid","play","scopedSlots","_u","fn","$t","validationInteger","v","validationMin","validationMax","ready","Math","max","proxy","min","model","value","callback","$$v","_n","expression","VBtn","VIcon","VTextField","content","options","transform","locals","computed","gamePackageId","$route","params","game","provablyFairGame","$store","getters","methods","getRoute","name","store","render","staticRenderFns"],"mappings":"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","file":"js/games/slots-resources-js-pages-game.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".lines-input[data-v-2c7ffe88] {\\n  max-width: 120px;\\n}\\n.message-container[data-v-2c7ffe88] {\\n  position: absolute;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  z-index: 10;\\n}\\n@media (min-aspect-ratio: 8/5) {\\ncanvas[data-v-2c7ffe88] {\\n    margin: 0 0px;\\n    height: calc( 100vh - 300px);\\n    width: auto;\\n}\\n}\\n@media (max-height: 550px) {\\ncanvas[data-v-2c7ffe88] {\\n    margin: 0 0px;\\n    height: calc( 100vh - 100px);\\n    width: auto;\\n}\\n}\\n@media (max-aspect-ratio: 8/5) {\\ncanvas[data-v-2c7ffe88] {\\n    margin: 0 0px;\\n    width: calc( 100vw - 70px);\\n    height: auto;\\n}\\n}\\n@media (max-width: 960px) {\\n.message-container[data-v-2c7ffe88] {\\n    top: 12px;\\n}\\n}\\n@media (max-width: 600px) {\\n.line-btns button[data-v-2c7ffe88] {\\n    min-width: 25px !important;\\n    font-size: 0.5rem;\\n}\\n}\", \"\"]);\n\n// exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"d-flex flex-column fill-height py-3 pt-md-3 pt-12\"},[_c('div',{staticClass:\"message-container d-flex justify-center align-center\"},[_c('game-message',{attrs:{\"message\":_vm.message}})],1),_vm._v(\" \"),_c('div',{staticClass:\"d-flex justify-center fill-height align-center\"},[_c('div',{staticClass:\"d-flex flex-md-row justify-center align-stretch flex-column\"},[_c('div',{staticClass:\"line-btns left d-flex flex-md-column align-center justify-space-between flex-row pa-5 pa-md-0\"},_vm._l((_vm.line_cols[0]),function(i){return _c('v-btn',{key:\"lines-1-\"+i,staticClass:\"pa-0\",class:{'primary':_vm.line_blink.indexOf(i)!=-1&&!_vm.animation.is_line_showig},attrs:{\"small\":\"\",\"disabled\":_vm.playing,\"type\":\"button\"},on:{\"mouseover\":function($event){return _vm.lineShow(i)},\"mouseout\":function($event){return _vm.lineHide(i)},\"click\":function($event){_vm.sound('click');_vm.lines=i;_vm.linesShow();}}},[_vm._v(\"\\n          \"+_vm._s(i)+\"\\n        \")])}),1),_vm._v(\" \"),_c('div',{staticClass:\"d-flex align-center justify-center\"},[_c('canvas',{ref:\"canvas\",attrs:{\"width\":\"1400\",\"height\":\"600\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"line-btns right d-flex flex-md-column align-stretch justify-space-between flex-row pa-5 pa-md-0\"},_vm._l((_vm.line_cols[1]),function(i){return _c('v-btn',{key:\"lines-2-\"+i,staticClass:\"pa-0\",class:{'primary':_vm.line_blink.indexOf(i)!=-1&&!_vm.animation.is_line_showig},attrs:{\"small\":\"\",\"disabled\":_vm.playing,\"type\":\"button\"},on:{\"mouseover\":function($event){return _vm.lineShow(i)},\"mouseout\":function($event){return _vm.lineHide(i)},\"click\":function($event){_vm.sound('click');_vm.lines=i;_vm.linesShow();}}},[_vm._v(\"\\n          \"+_vm._s(i)+\"\\n        \")])}),1)])]),_vm._v(\" \"),_c('play-controls',{attrs:{\"loading\":_vm.loading,\"playing\":_vm.playing,\"disabled\":!_vm.formIsValid},on:{\"play\":_vm.play},scopedSlots:_vm._u([{key:\"before-bet-input\",fn:function(){return [_c('v-text-field',{staticClass:\"lines-input text-center mr-2\",attrs:{\"label\":_vm.$t('Lines'),\"dense\":\"\",\"rules\":[_vm.validationInteger, function (v) { return _vm.validationMin(v, 1); }, function (v) { return _vm.validationMax(v, 20); }],\"disabled\":_vm.playing || !_vm.ready,\"outlined\":\"\",\"full-width\":false},scopedSlots:_vm._u([{key:\"prepend-inner\",fn:function(){return [_c('v-btn',{attrs:{\"small\":\"\",\"text\":\"\",\"icon\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.lines = Math.max(1, --_vm.lines)}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"\\n              mdi-minus\\n            \")])],1)]},proxy:true},{key:\"append\",fn:function(){return [_c('v-btn',{attrs:{\"small\":\"\",\"text\":\"\",\"icon\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.lines = Math.min(20, ++_vm.lines)}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"\\n              mdi-plus\\n            \")])],1)]},proxy:true}]),model:{value:(_vm.lines),callback:function ($$v) {_vm.lines=_vm._n($$v)},expression:\"lines\"}})]},proxy:true}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"d-flex flex-column fill-height py-3 pt-md-3 pt-12\">\n    <div class=\"message-container d-flex justify-center align-center\">\n      <game-message :message=\"message\" />\n    </div>\n    <div class=\"d-flex justify-center fill-height align-center\">\n      <div class=\"d-flex flex-md-row justify-center align-stretch flex-column\">\n        <div class=\"line-btns left d-flex flex-md-column align-center justify-space-between flex-row pa-5 pa-md-0\">\n          <v-btn v-for=\"i in line_cols[0]\" :key=\"`lines-1-`+i\" small class=\"pa-0\" :disabled=\"playing\" :class=\"{'primary':line_blink.indexOf(i)!=-1&&!animation.is_line_showig}\" type=\"button\" @mouseover=\"lineShow(i)\" @mouseout=\"lineHide(i)\" @click=\"sound('click');lines=i;linesShow();\">\n            {{ i }}\n          </v-btn>\n        </div>\n        <div class=\"d-flex align-center justify-center\">\n          <canvas ref=\"canvas\" width=\"1400\" height=\"600\" />\n        </div>\n        <div class=\"line-btns right d-flex flex-md-column align-stretch justify-space-between flex-row pa-5 pa-md-0\">\n          <v-btn v-for=\"i in line_cols[1]\" :key=\"`lines-2-`+i\" small class=\"pa-0\" :disabled=\"playing\" :class=\"{'primary':line_blink.indexOf(i)!=-1&&!animation.is_line_showig}\" type=\"button\" @mouseover=\"lineShow(i)\" @mouseout=\"lineHide(i)\" @click=\"sound('click');lines=i;linesShow();\">\n            {{ i }}\n          </v-btn>\n        </div>\n      </div>\n    </div>\n\n    <play-controls :loading=\"loading\" :playing=\"playing\" :disabled=\"!formIsValid\" @play=\"play\">\n      <template v-slot:before-bet-input>\n        <v-text-field\n          v-model.number=\"lines\"\n          :label=\"$t('Lines')\"\n          dense\n          :rules=\"[validationInteger, v => validationMin(v, 1), v => validationMax(v, 20)]\"\n          :disabled=\"playing || !ready\"\n          outlined\n          :full-width=\"false\"\n          class=\"lines-input text-center mr-2\"\n        >\n          <template v-slot:prepend-inner>\n            <v-btn small text icon color=\"primary\" @click=\"lines = Math.max(1, --lines)\">\n              <v-icon small>\n                mdi-minus\n              </v-icon>\n            </v-btn>\n          </template>\n          <template v-slot:append>\n            <v-btn small text icon color=\"primary\" @click=\"lines = Math.min(20, ++lines)\">\n              <v-icon small>\n                mdi-plus\n              </v-icon>\n            </v-btn>\n          </template>\n        </v-text-field>\n      </template>\n    </play-controls>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import { mapState, mapActions } from 'vuex'\n  import { config } from '~/plugins/config'\n  import FormMixin from '~/mixins/Form'\n  import GameMixin from '~/mixins/Game'\n  import SoundMixin from '~/mixins/Sound'\n  import { sleep } from '~/plugins/utils'\n  import clickSound from '~/../audio/common/click.wav'\n  import winSound from 'packages/slots/resources/audio/win.wav'\n  import loseSound from 'packages/slots/resources/audio/lose.wav'\n  import spinSound from 'packages/slots/resources/audio/spin.wav'\n  import startSound from 'packages/slots/resources/audio/start.wav'\n  import stopSound from 'packages/slots/resources/audio/stop.wav'\n  import animationImage from 'packages/slots/resources/images/animation.png'\n  import PlayControls from '~/components/Games/PlayControls'\n  import GameMessage from '~/components/Games/GameMessage'\n\n  export default {\n    name: 'Slots',\n\n    components: { GameMessage, PlayControls },\n\n    mixins: [FormMixin, GameMixin, SoundMixin],\n\n    data () {\n      return {\n        formIsValid: true,\n        loading: false,\n        playing: false,\n        ready: false,\n        message: null,\n        lines: 0,\n        line_cols: [\n          [4, 2, 6, 9, 10, 1, 8, 7, 3, 5],\n          [11, 13, 16, 12, 15, 17, 19, 14, 18, 20]\n        ],\n        line_blink: [],\n        win: {},\n        win_scatters: [],\n        win_lines: {},\n        win_loop: [],\n        result: null,\n        animation: {}\n      }\n    },\n\n    computed: {\n      ...mapState('auth', ['account']),\n      variations () {\n        return config(`${this.gamePackageId}`).variations\n      },\n      variation () {\n        return this.variations && this.variations.length ? this.variations.findIndex(o => o.slug === this.$route.params.slug) : null\n      },\n      config () {\n        return this.variation !== null ? this.variations[this.variation] : {}\n      }\n    },\n\n    watch: {\n      variation (n, o) {\n        // don't call init() when component is initiated, because it's called in the created() hook\n        if (o !== null) {\n            this.init()\n        }\n      }\n    },\n\n    created () {\n      // wait until next tick to ensure all computed properties are available (important to set lines property)\n      this.$nextTick(() => {\n        this.init()\n      })\n    },\n\n    methods: {\n      ...mapActions({\n        updateUserAccountBalance: 'auth/updateUserAccountBalance',\n        setProvablyFairGame: 'provably-fair/set'\n      }),\n      init () {\n        clearInterval(this.i)\n        this.i = null\n        this.formIsValid = true\n        this.loading = false\n        this.playing = false\n        this.ready = false\n        this.message = null\n        this.lines = this.config.default_lines\n        this.line_blink = []\n        this.win = {}\n        this.win_scatters = []\n        this.win_lines = {}\n        this.win_loop = []\n        this.result = null\n        this.animation = {\n          i: null,\n          wheel_angle: 0,\n          reels: [],\n          sym: [],\n          lines: [],\n          animation: null,\n          t: 0,\n          t_show_demo: 0,\n          t_hide: 0,\n          is_show_demo: false,\n          is_line_showig: false,\n          lines_show_demo: -1,\n          lines_show_c: 0,\n          lines_show_demo_t: 1,\n          is_spinned: false,\n          is_render_planned: false,\n          win_line_demo: 0,\n          speed_max: 5000,\n          animation_time: 30,\n          animation_frames: 30,\n          animation_framre_size: 200,\n          // speed_max: this.options.config.speed_max,\n          // animation_time: this.options.config.animation_time,\n          requestAnimationFrame: e => setTimeout(e, 1),\n          requestAnimationFrame_get: () => {\n            var _raf = window.requestAnimationFrame ||\n                    window.mozRequestAnimationFrame ||\n                    window.webkitRequestAnimationFrame ||\n                    window.msRequestAnimationFrame ||\n                    window.oRequestAnimationFrame\n            this.animation.requestAnimationFrame = _raf ? _raf.bind(window) : null\n          },\n          lines_indexes: [\n                    [1, 1, 1, 1, 1],\n                    [0, 0, 0, 0, 0],\n                    [2, 2, 2, 2, 2],\n\n                    [1, 1, 0, 1, 2],\n                    [1, 1, 2, 1, 0],\n                    [1, 0, 1, 2, 1],\n                    [1, 0, 1, 2, 2],\n                    [1, 0, 0, 1, 2],\n                    [1, 2, 1, 0, 1],\n                    [1, 2, 2, 1, 0],\n                    [1, 2, 1, 0, 0],\n\n                    [0, 1, 2, 1, 0],\n                    [0, 1, 1, 1, 2],\n                    [0, 0, 1, 2, 2],\n                    [0, 0, 1, 2, 1],\n                    [0, 0, 0, 1, 2],\n\n                    [2, 1, 0, 1, 2],\n                    [2, 1, 1, 1, 0],\n                    [2, 2, 1, 0, 0],\n                    [2, 2, 1, 0, 1]\n          ]\n        }\n\n        document.addEventListener('visibilitychange', this.visibilityCnage)\n        if ('hidden' in document) {\n          document.addEventListener('visibilitychange', this.changeWindowState)\n        } else if ('mozHidden' in document) {\n          document.addEventListener('mozvisibilitychange', this.changeWindowState)\n        } else if ('webkitHidden' in document) {\n          document.addEventListener('webkitvisibilitychange', this.changeWindowState)\n        } else if ('msHidden' in document) {\n          document.addEventListener('msvisibilitychange', this.changeWindowState)\n        }\n        var c = 0\n        const fin = () => {\n          c--\n          if (c === 0) {\n            this.ready = true\n            setTimeout(this.startAnimation, 10)\n            window.game = this\n          }\n        }\n        const fnx = () => {\n          this.config.symbols.forEach(symFile => {\n            c++\n            var sym = {\n              source: null,\n              speed_frames: [],\n              animation: []\n            }\n            sym.source = new Image()\n            sym.source.onload = () => {\n              var i, x, y\n              var c, ctx\n              var animationFrame = 0\n              for (i = 0; i <= this.animation.speed_max / 1000 * 2; i++) {\n                x = Math.round(Math.pow(i, 5) * 0.001)\n                c = document.createElement('canvas')\n                ctx = c.getContext('2d')\n                c.width = 200\n                c.height = 200 + x\n                ctx.globalAlpha = 1 / (x + 1)\n                for (y = 0; y < x + 1; ++y) { ctx.drawImage(sym.source, (200 - sym.source.width) / 2, y + (200 - sym.source.height) / 2) }\n                sym.speed_frames[i] = c\n              }\n              for (i = 0; i < this.animation.animation_time; i++) {\n                const z = Math.cos(i * 4 * Math.PI / this.animation.animation_time) * 0.1 + 0.9\n                c = document.createElement('canvas')\n                c.width = c.height = 200\n                ctx = c.getContext('2d')\n                ctx.drawImage(\n                        this.animation.animation,\n                        this.animation.animation.height * animationFrame,\n                        0,\n                        this.animation.animation.height,\n                        this.animation.animation.height,\n                        0,\n                        0,\n                        200,\n                        200)\n                ctx.drawImage(\n                        sym.source,\n                        (200 - sym.source.width * z) / 2,\n                        (200 - sym.source.height * z) / 2,\n                        sym.source.width * z,\n                        sym.source.height * z)\n                sym.animation[i] = c\n                animationFrame++\n                if (animationFrame >= this.animation.animation_frames)animationFrame = 0\n              }\n              fin()\n            }\n            sym.source.src = symFile.image\n            this.animation.sym.push(sym)\n          })\n        }\n        this.animation.animation = new Image()\n        this.animation.animation.onload = fnx\n        this.animation.animation.src = animationImage\n      },\n      async play (bet) {\n        this.sound(clickSound)\n        this.loading = true\n        this.playing = true\n        this.win = 0\n        this.message = null\n        clearTimeout(this.show_demo_t)\n        this.show_demo_t = 0\n        this.animation.lines_show_demo = -1\n        this.animation.is_line_showig = false\n        this.animation.is_show_demo = false\n        this.animation.win_line_demo = 0\n        this.result = null\n        this.animation.spinStart()\n        // update user balance\n        this.updateUserAccountBalance(this.account.balance - bet)\n        await sleep(100)\n        // API request params\n        const endpoint = this.getRoute('play')\n        const requestParams = { hash: this.provablyFairGame.hash, bet, lines: this.lines, variation: this.variation }\n        // execute the action\n        const { data: game } = await axios.post(endpoint, requestParams)\n        this.loading = false\n        this.setProvablyFairGame({ key: this.gamePackageId, game: game.pf_game })\n        // display banker score and result for each hand\n        // game.gameable.reels.forEach((el, i) => game.gameable.reels[i]--)\n        if (this.playing) {\n          this.result = {\n            balance: game.account.balance,\n            reels: game.gameable.reels,\n            win_titles: game.gameable.win_titles,\n            wins: game.gameable.wins,\n            win_lines: game.gameable.win_lines,\n            win_scatters: game.gameable.win_scatters,\n            total_win: game.win\n          }\n        }\n      },\n      visibilityCnage () {\n        if (document.hidden !== undefined) {\n          if (document.hidden) { this.animation.t_hide = Date.now() } else {\n            var r = Date.now() - this.animation.t_hide\n            this.animation.t += r\n            this.animation.lines.forEach(el => { el.t += r })\n            this.animation.reels.forEach(el => { el.t += r })\n          }\n        }\n      },\n      changeWindowState (e) {\n        this.animation.requestAnimationFrame_get()\n        this.animation.requestAnimationFrame(() => {\n          this.animation.canvas.style.display = 'none'\n          this.animation.requestAnimationFrame(() => { this.animation.canvas.style.display = 'block' })\n        })\n      },\n      showResult () {\n        this.updateUserAccountBalance(this.result.balance)\n        this.animation.lines.forEach(el => el.hide())\n        this.line_blink = []\n        this.win_loop = []\n        if (this.result.total_win > 0) {\n          this.sound(winSound)\n          var k = 0\n          const titleKeys = Object.keys(this.result.win_titles)\n          this.message = this.$t('You won') + ' ' + this.result.total_win\n          if (Object.keys(this.result.win_lines).length) {\n            Object.keys(this.result.win_lines).forEach(winLineIdx => {\n              const winLine = this.result.win_lines[winLineIdx]\n              this.win_loop.push({\n                type: 'line',\n                idx: winLineIdx,\n                text: titleKeys[k] + ' ' + this.$t('pays') + ' ' + this.result.win_titles[titleKeys[k]]\n              })\n              k++\n              this.line_blink.push(winLineIdx)\n              winLine.forEach((symbolIdx, reelIdx) => {\n                if (symbolIdx !== null) this.animation.reels[reelIdx].win_add(symbolIdx)\n              })\n            })\n          }\n          if (this.result.win_scatters.length) {\n            this.win_loop.unshift({\n              type: 'scatter',\n              text: titleKeys[k] + ' ' + this.$t('pay') + ' ' + this.result.win_titles[titleKeys[k]]\n            })\n            this.result.win_scatters.forEach((scatters, reelIdx) => scatters.forEach(scatter => this.animation.reels[reelIdx].win_add(scatter)))\n          }\n          this.win_lines = this.result.win_lines\n          this.win_scatters = this.result.win_scatters\n        } else {\n          this.sound(loseSound)\n        }\n        window.result = this.result\n        this.result = null\n        this.playing = false\n        this.show_demo_t = setTimeout(this.showResultDemo, 2000)\n      },\n      showResultDemo () {\n        this.show_demo_t = 0\n        this.animation.reels.forEach(el => el.win_clear())\n        this.animation.t_show_demo = -1\n        this.animation.is_show_demo = true\n      },\n      linesShow () {\n        this.animation.lines.forEach(el => el.hide())\n        this.animation.lines_show_demo = this.lines\n        this.animation.lines_show_c = 0\n        this.animation.lines_show_demo_t = 1\n      },\n      lineShow (line) {\n        this.animation.is_line_showig = line\n        this.animation.lines.forEach(line => line.hide())\n        if (this.animation.lines[line - 1]) this.animation.lines[line - 1].hide()\n        if (this.animation.lines[line - 1]) this.animation.lines[line - 1].show()\n      },\n      lineHide (line) {\n        this.animation.is_line_showig = false\n        if (this.animation.lines[line - 1] && this.animation.win_line_demo !== line) { this.animation.lines[line - 1].hide() }\n        if (this.animation.win_line_demo && this.animation.win_line_demo !== line) { this.animation.lines[this.animation.win_line_demo - 1].show() }\n      },\n      render () {\n        if (this.playing && this.animation.is_spinned && this.result) this.animation.spinStop()\n        this.animation.is_render_planned = false\n        if (this.animation.is_show_demo && this.win_loop.length > 0) {\n          while (this.animation.t_show_demo === -1 || this.animation.t_show_demo > 2000) {\n            const line = this.win_loop.shift()\n            this.win_loop.push(line)\n            this.animation.t_show_demo -= 2000\n            if (this.animation.t_show_demo < 0) this.animation.t_show_demo = 0\n            this.animation.reels.forEach(el => el.win_clear())\n            if (!this.animation.is_line_showig) {\n              this.line_blink = []\n              this.animation.lines.forEach(el => el.hide())\n            }\n            if (line.type === 'scatter') {\n              this.animation.win_line_demo = 0\n              this.message = line.text\n              this.win_scatters.forEach((scatters, reelIdx) => {\n                scatters.forEach(scatter => this.animation.reels[reelIdx].win_add(scatter))\n              })\n            } else {\n              this.animation.win_line_demo = parseInt(line.idx) + 1\n              this.message = line.text\n              if (!this.animation.is_line_showig) {\n                this.line_blink = [parseInt(line.idx) + 1]\n                this.animation.lines[parseInt(line.idx)].show()\n              }\n              const winLine = this.win_lines[line.idx]\n              this.animation.reels.forEach((el, x) => {\n                if (winLine[x] !== undefined && winLine[x] >= 0) { el.win_add(winLine[x]) }\n              })\n            }\n          }\n          this.animation.t_show_demo += Date.now() - this.animation.t\n        }\n        if (this.animation.lines_show_demo !== -1) {\n          if (this.animation.lines_show_demo_t > 0) {\n            if (this.animation.lines_show_c !== 0) this.animation.lines[this.animation.lines_show_c - 1].hide()\n            if (this.animation.lines_show_c === this.animation.lines_show_demo) {\n              if (this.animation.is_line_showig) { this.animation.lines[this.animation.is_line_showig - 1].show() }\n              this.animation.lines_show_demo = -1\n              this.animation.lines_show_c = 0\n            } else {\n              this.animation.lines[this.animation.lines_show_c].show()\n              this.animation.lines_show_c++\n              this.animation.lines_show_demo_t -= 50\n            }\n          }\n          this.animation.lines_show_demo_t += Date.now() - this.animation.t\n        }\n        var ctx = this.animation.canvas.getContext('2d')\n        ctx.clearRect(0, 0, this.animation.canvas.width, this.animation.canvas.height)\n        this.animation.t = Date.now()\n\n        this.animation.reels.forEach(el => el.draw())\n        if (!this.animation.is_line_showig && this.animation.lines_show_demo === -1) this.animation.lines.forEach(el => el.draw())\n        this.animation.reels.forEach(el => el.drawWin())\n        if (this.animation.is_line_showig || this.animation.lines_show_demo !== -1) this.animation.lines.forEach(el => el.draw())\n\n        this.animation.lines.forEach(el => el.calculate())\n        this.animation.reels.forEach(el => el.calculate())\n      },\n      startAnimation () {\n        this.animation.canvas = this.$refs.canvas\n        const GameSlotsLine = function (data, game, color) {\n                                var self = this\n                                var mx = 245 // move x total\n                                var my = 100 // move y total\n                                var stx = 228 // step x\n                                var sty = 200 // step y\n                                if (color === undefined) color = 'white'\n                                this.self = this\n                                this.data = data\n                                this.game = game\n                                this.color = color\n                                this.alpha = 0\n                                this.shown_p = 0\n                                this.t = Date.now()\n                                this.display = false\n                                this.show = function () {\n                                  self.display = true\n                                }\n                                this.hide = function () {\n                                  self.display = false\n                                }\n                                this.draw = function () {\n                                  if (self.shown_p === 0) return\n                                  var ctx = self.game.canvas.getContext('2d')\n                                  ctx.strokeStyle = self.color\n                                  ctx.lineWidth = 4\n                                  ctx.shadowOffsetX = 0\n                                  ctx.shadowOffsetY = 0\n                                  ctx.shadowColor = self.color\n                                  ctx.lineCap = 'round'\n                                  ctx.globalAlpha = self.alpha\n                                  var la = [\n                                    self.alpha * 5,\n                                    self.alpha * 15,\n                                    self.alpha * 30,\n                                    self.alpha * 60,\n                                    self.alpha * 100\n                                  ]\n                                  for (var i in la) {\n                                    ctx.shadowBlur = la[i]\n                                    ctx.beginPath()\n                                    ctx.moveTo(mx - 150, my + sty * self.data[0])\n                                    for (i in self.data) { ctx.lineTo(mx + stx * i, my + sty * self.data[i]) }\n                                    ctx.lineTo(mx + stx * i + 150, my + sty * self.data[i])\n                                    ctx.stroke()\n                                  }\n                                  ctx.globalAlpha = 1\n                                  ctx.strokeStyle = self.color\n                                  ctx.lineWidth = 0\n                                  ctx.shadowOffsetX = 0\n                                  ctx.shadowOffsetY = 0\n                                  ctx.shadowBlur = 0\n                                  ctx.shadowColor = self.color\n                                  ctx.lineCap = 'round'\n                                }\n                                this.calculate = function () {\n                                  if (self.display && self.shown_p < 1) {\n                                    self.shown_p += (self.game.t - self.t) / 300\n                                    if (self.shown_p > 1)self.shown_p = 1\n                                    self.alpha = self.shown_p\n                                  }\n\n                                  if (!self.display && self.shown_p > 0) {\n                                    self.shown_p -= (self.game.t - self.t) / 100\n                                    if (self.shown_p < 0)self.shown_p = 0\n                                    self.alpha = self.shown_p\n                                  }\n                                  if (!self.display && self.shown_p === 0 && self.alpha !== 0) { self.alpha = 1 }\n                                  self.t = self.game.t\n                                }\n                                return this\n                              }\n        const GameSlotsReel = function (idx, reelIds, game) {\n                      var self = this\n                      var mx = 245 // move x total\n                      var my = 100 // move y total\n                      var stx = 228 // step x\n                      var sty = 200 // step y\n                      this.idx = idx\n                      this.self = this\n                      this.ids = reelIds\n                      this.game = game\n                      this.speed_frame = 0\n                      this.animation_frame = 0\n                      this.speed = 0\n                      this.speed_max = game.speed_max\n                      this.delta = 0\n                      this.delta_stop = 0\n                      this.stop_to = 0\n                      this.position = 0\n                      this.t = Date.now()\n                      this.is_spin = false\n                      this.is_stopping = false\n                      this.is_spinning = false\n                      this.delta_pos_stop = 4\n                      this.delta_stop_max = 200 * this.delta_pos_stop\n                      this.syms_win = []\n                      this.startSpin = function () {\n                        self.is_spin = true\n                        self.is_stopping = false\n                        self.is_spinning = true\n                      }\n                      this.stopSpin = function (x) {\n                        if (typeof (x) === 'undefined')x = 0\n                        self.stop_to = x\n                        self.is_spin = false\n                      }\n                      this.onspinned = null\n                      this.onstopped = null\n                      this.win = function (syms) {\n                        self.syms_win = syms\n                      }\n                      this.win_add = function (sym) {\n                        self.syms_win.push(sym)\n                      }\n                      this.win_clear = function () {\n                        self.syms_win = []\n                      }\n                      this.getReelPosition = function (pos) {\n                        if (pos < 0) {\n                          return self.getReelPosition(self.ids.length + pos)\n                        } else if (pos >= self.ids.length) {\n                          return self.getReelPosition(pos - self.ids.length)\n                        }\n                        return pos\n                      }\n                      this.draw = function () {\n                        var ctx = self.game.canvas.getContext('2d')\n                        var dFrom = 0\n                        var dTo = 0\n                        var i\n                        var frame = null\n\n                        if (self.speed > 0) {\n                          while (my + sty * (-dFrom) + Math.round(self.game.sym[self.ids[self.getReelPosition(self.position - 1 - dFrom)]].speed_frames[self.speed_frame].height * 0.5) + self.delta > 0)dFrom++\n                          while (my + sty * (dTo) - Math.round(self.game.sym[self.ids[self.getReelPosition(self.position - 1 - dFrom)]].speed_frames[self.speed_frame].height * 0.5) + self.delta < self.game.canvas.height)dTo++\n                        }\n\n                        for (i = -dFrom; i < 3 + dTo; i++) {\n                          if (self.speed === 0 && self.syms_win.indexOf(self.getReelPosition(self.position + i)) !== -1) { frame = null } else { frame = self.game.sym[self.ids[self.getReelPosition(self.position + i)]].speed_frames[self.speed_frame] }\n                          if (frame) { ctx.drawImage(frame, mx + stx * self.idx - Math.round(frame.width * 0.5), my + sty * i - Math.round(frame.height * 0.5) + self.delta) }\n                        }\n\n                        if (self.speed > 0) {\n                          ctx.strokeStyle = 'white'\n                          ctx.lineWidth = 5\n                          ctx.shadowOffsetX = 0\n                          ctx.shadowOffsetY = 10\n                          ctx.shadowColor = 'white'\n                          ctx.lineCap = 'round'\n\n                          var la = [5, 15, 30]\n                          var a = 1 - Math.abs((self.delta * 2 - sty) / sty)\n\n                          if (self.speed < self.speed_max / 2) { ctx.globalAlpha = a } else { ctx.globalAlpha = (2 - a) / 2 }\n\n                          for (i in la) {\n                            ctx.shadowBlur = la[i]\n                            ctx.beginPath()\n                            ctx.moveTo((mx - 100) + stx * self.idx + (100 - 100 * a), -10)\n                            ctx.lineTo((mx - 100) + stx * self.idx + 200 - (100 - 100 * a), -10)\n                            ctx.stroke()\n                          }\n\n                          ctx.shadowOffsetY = -10\n                          for (i in la) {\n                            ctx.shadowBlur = la[i]\n                            ctx.beginPath()\n                            ctx.moveTo((mx - 100) + stx * self.idx + (100 - 100 * a), self.game.canvas.height + 10)\n                            ctx.lineTo((mx - 100) + stx * self.idx + 200 - (100 - 100 * a), self.game.canvas.height + 10)\n                            ctx.stroke()\n                          }\n\n                          ctx.globalAlpha = 1\n                          ctx.strokeStyle = 'white'\n                          ctx.lineWidth = 0\n                          ctx.shadowOffsetX = 0\n                          ctx.shadowOffsetY = 0\n                          ctx.shadowBlur = 0\n                          ctx.shadowColor = 'white'\n                          ctx.lineCap = 'round'\n                        }\n                      }\n\n                      this.drawWin = function () {\n                        if (self.speed > 0) return\n\n                        var ctx = self.game.canvas.getContext('2d')\n\n                        var frame = null\n                        for (var i = 0; i < 3; i++) {\n                          if (self.speed === 0 && self.syms_win.indexOf(self.getReelPosition(self.position + i)) !== -1) {\n                            frame = self.game.sym[self.ids[self.getReelPosition(self.position + i)]].animation[Math.round(self.animation_frame)]\n                            if (frame) { ctx.drawImage(frame, mx + stx * self.idx - Math.round(frame.width * 0.5), my + sty * i - Math.round(frame.height * 0.5) + self.delta) }\n                          }\n                        }\n                      }\n\n                      this.calculate = function () {\n                        self.delta += Math.round((self.game.t - self.t) * self.speed * 0.0005)\n\n                        if (!self.is_spin) {\n                          self.delta_stop -= Math.round((self.game.t - self.t) * self.speed * 0.0005)\n                          if (self.delta_stop < 0)self.delta_stop = 0\n                        }\n\n                        while (self.delta >= sty) {\n                          self.delta -= sty\n                          self.position = self.getReelPosition(self.position - 1)\n                          if (!self.is_spin && !self.is_stopping && self.getReelPosition(self.position - self.delta_pos_stop) === self.stop_to) {\n                            self.is_stopping = true\n                            self.delta_stop = self.delta_stop_max - self.delta\n                          }\n                        }\n\n                        while (self.delta <= -sty) {\n                          self.delta += sty\n                          self.position = self.getReelPosition(self.position + 1)\n                        }\n\n                        if (self.is_spin && self.speed < self.speed_max) {\n                          self.speed += Math.round((self.game.t - self.t) * 10000 * 0.0005)\n                          if (self.speed > self.speed_max) self.speed = self.speed_max\n\n                          self.speed_frame = Math.round(self.speed / 1000 * 2)\n                          if (self.speed_frame < 0)self.speed_frame = 0\n                          if (self.speed_frame > Math.round(self.speed_max / 1000 * 2))self.speed_frame = Math.round(self.speed_max / 1000 * 2)\n\n                          if (!(self.speed < self.speed_max) && typeof (self.onspinned) === 'function') { self.onspinned(self) }\n                        }\n\n                        if (!self.is_spin && self.is_stopping && self.speed > 0) {\n                          var newSpeed = Math.round(Math.pow(self.delta_stop / self.delta_stop_max, 0.5) * self.speed_max)\n                          if (newSpeed < self.speed) { self.speed = newSpeed }\n                          Math.round((self.game.t - self.t) * 5000 * 0.0005)\n                          if (self.speed < 0) self.speed = 0\n                          if (self.speed === 0) {\n                            self.is_spinning = false\n                            self.is_stopping = false\n                            self.delta = 0\n                            if (typeof (self.onstopped) === 'function') { self.onstopped(self) }\n                          }\n                          self.speed_frame = Math.round(self.speed / 1000 * 2)\n                          if (self.speed_frame < 0)self.speed_frame = 0\n                          if (self.speed_frame > Math.round(self.speed_max / 1000 * 2))self.speed_frame = Math.round(self.speed_max / 1000 * 2)\n                        }\n\n                        if (self.speed === 0 && self.syms_win.length > 0) {\n                          self.animation_frame += (self.game.t - self.t) * 0.03\n                          while (Math.round(self.animation_frame) >= self.game.animation_time)self.animation_frame -= self.game.animation_time\n                        }\n\n                        self.t = self.game.t\n                      }\n                      return this\n                    }\n        this.animation.lines_indexes.forEach(el => this.animation.lines.push(new GameSlotsLine(el, this.animation, this.$vuetify.theme.isDark ? 'white' : getComputedStyle(document.body).getPropertyValue('--v-primary-lighten1').trim())))\n        this.config.reels.forEach((el, idx) => this.animation.reels.push(new GameSlotsReel(idx, el, this.animation)))\n        this.animation.t = Date.now()\n        this.animation.spinStart = () => {\n          this.animation.is_show_demo = false\n          this.animation.reels.forEach(el => el.win_clear())\n          this.animation.lines.forEach(el => el.hide())\n          var t = 0\n          this.animation.reels.forEach((el, idx) => {\n            setTimeout(() => {\n              el.startSpin()\n              this.sound(startSound)\n              if (idx === 4) this.soundLoop(spinSound)\n            }, t += 250)\n          })\n        }\n        this.animation.spinStop = () => {\n          this.animation.is_spinned = false\n          var t = 0\n          this.animation.reels.forEach((reel, idx) => {\n            setTimeout(() => reel.stopSpin(this.result.reels[idx]), t += 500)\n          })\n        }\n        this.animation.gamestop = () => {\n          this.sound(stopSound)\n          if (Object.values(this.animation.reels).reduce((acc, val) => acc + val.speed, 0) === 0) {\n            this.showResult()\n            this.soundStop(spinSound)\n          }\n        }\n        this.animation.reels[4].onspinned = () => { this.animation.is_spinned = true }\n        this.animation.reels.forEach(el => { el.onstopped = this.animation.gamestop })\n        this.animation.requestAnimationFrame_get()\n        this.i = setInterval(() => {\n          if (!this.animation.is_render_planned) {\n            this.animation.is_render_planned = true\n            this.animation.requestAnimationFrame(this.render)\n          }\n        }, 40)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .lines-input {\n    max-width: 120px;\n  }\n  .message-container {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index:10;\n  }\n  @media (min-aspect-ratio: 8/5) {\n    canvas {\n      margin: 0 0px;\n      height: calc( 100vh - 300px);\n      width: auto;\n    }\n  }\n  @media (max-height: 550px) {\n    canvas {\n      margin: 0 0px;\n      height: calc( 100vh - 100px);\n      width: auto;\n    }\n  }\n  @media (max-aspect-ratio: 8/5) {\n    canvas {\n      margin: 0 0px;\n      width: calc( 100vw - 70px);\n      height: auto;\n    }\n  }\n  @media (max-width:960px) {\n    .message-container {\n      top: 12px;\n    }\n  }\n  @media (max-width:600px) {\n    .line-btns button {\n      min-width:25px !important;\n      font-size:0.5rem;\n    }\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./game.vue?vue&type=template&id=2c7ffe88&scoped=true&\"\nimport script from \"./game.vue?vue&type=script&lang=js&\"\nexport * from \"./game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./game.vue?vue&type=style&index=0&id=2c7ffe88&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2c7ffe88\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VIcon,VTextField})\n","module.exports = \"/images/animation.png?51e555ee2f240776485e0122d8c59993\";","module.exports = __webpack_public_path__ + \"audio/slots/win.wav\";","module.exports = __webpack_public_path__ + \"audio/slots/spin.wav\";","import mod from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=2c7ffe88&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=2c7ffe88&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"audio/slots/lose.wav\";","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=2c7ffe88&lang=scss&scoped=true&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=2c7ffe88&lang=scss&scoped=true&\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./game.vue?vue&type=style&index=0&id=2c7ffe88&lang=scss&scoped=true&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","<script>\nimport { route } from '~/plugins/route'\n\nexport default {\n  computed: {\n    gamePackageId () {\n      return this.$route.params.game\n    },\n    provablyFairGame () {\n      return this.$store.getters['provably-fair/get'](this.gamePackageId) || {}\n    }\n  },\n\n  methods: {\n    getRoute (action) {\n      return route(`games.${this.gamePackageId}.${action}`)\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vuetify-loader/lib/loader.js??ref--11-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=js&\"","import store from '~/store'\n\nexport function route (name) {\n  return store.getters['route/get'](name)\n}\n","var render, staticRenderFns\nimport script from \"./Game.vue?vue&type=script&lang=js&\"\nexport * from \"./Game.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"audio/common/click.wav\";","module.exports = __webpack_public_path__ + \"audio/slots/start.wav\";","module.exports = __webpack_public_path__ + \"audio/slots/stop.wav\";"],"sourceRoot":""}